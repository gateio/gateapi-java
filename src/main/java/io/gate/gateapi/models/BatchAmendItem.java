/*
 * Gate API
 * Welcome to Gate API  APIv4 provides operations related to spot, margin, and contract trading, including public interfaces for querying market data and authenticated private interfaces for implementing API-based automated trading.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.gate.gateapi.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

/**
 * Order information that needs to be modified.
 */
public class BatchAmendItem {
    public static final String SERIALIZED_NAME_ORDER_ID = "order_id";
    @SerializedName(SERIALIZED_NAME_ORDER_ID)
    private String orderId;

    public static final String SERIALIZED_NAME_CURRENCY_PAIR = "currency_pair";
    @SerializedName(SERIALIZED_NAME_CURRENCY_PAIR)
    private String currencyPair;

    public static final String SERIALIZED_NAME_ACCOUNT = "account";
    @SerializedName(SERIALIZED_NAME_ACCOUNT)
    private String account;

    public static final String SERIALIZED_NAME_AMOUNT = "amount";
    @SerializedName(SERIALIZED_NAME_AMOUNT)
    private String amount;

    public static final String SERIALIZED_NAME_PRICE = "price";
    @SerializedName(SERIALIZED_NAME_PRICE)
    private String price;

    public static final String SERIALIZED_NAME_AMEND_TEXT = "amend_text";
    @SerializedName(SERIALIZED_NAME_AMEND_TEXT)
    private String amendText;

    public static final String SERIALIZED_NAME_ACTION_MODE = "action_mode";
    @SerializedName(SERIALIZED_NAME_ACTION_MODE)
    private String actionMode;


    public BatchAmendItem orderId(String orderId) {
        
        this.orderId = orderId;
        return this;
    }

     /**
     * The order ID returned upon successful creation or the custom ID specified by the user during creation (i.e., the &#39;text&#39; field).
     * @return orderId
    **/
    public String getOrderId() {
        return orderId;
    }


    public void setOrderId(String orderId) {
        this.orderId = orderId;
    }

    public BatchAmendItem currencyPair(String currencyPair) {
        
        this.currencyPair = currencyPair;
        return this;
    }

     /**
     * Currency pair.
     * @return currencyPair
    **/
    public String getCurrencyPair() {
        return currencyPair;
    }


    public void setCurrencyPair(String currencyPair) {
        this.currencyPair = currencyPair;
    }

    public BatchAmendItem account(String account) {
        
        this.account = account;
        return this;
    }

     /**
     * Default spot, unified account and warehouse-by-store leverage account.
     * @return account
    **/
    @javax.annotation.Nullable
    public String getAccount() {
        return account;
    }


    public void setAccount(String account) {
        this.account = account;
    }

    public BatchAmendItem amount(String amount) {
        
        this.amount = amount;
        return this;
    }

     /**
     * Trading Quantity. Only one of amountor pricecan be specified.
     * @return amount
    **/
    @javax.annotation.Nullable
    public String getAmount() {
        return amount;
    }


    public void setAmount(String amount) {
        this.amount = amount;
    }

    public BatchAmendItem price(String price) {
        
        this.price = price;
        return this;
    }

     /**
     * Trading Price. Only one of amountor pricecan be specified.
     * @return price
    **/
    @javax.annotation.Nullable
    public String getPrice() {
        return price;
    }


    public void setPrice(String price) {
        this.price = price;
    }

    public BatchAmendItem amendText(String amendText) {
        
        this.amendText = amendText;
        return this;
    }

     /**
     * Custom info during amending order.
     * @return amendText
    **/
    @javax.annotation.Nullable
    public String getAmendText() {
        return amendText;
    }


    public void setAmendText(String amendText) {
        this.amendText = amendText;
    }

    public BatchAmendItem actionMode(String actionMode) {
        
        this.actionMode = actionMode;
        return this;
    }

     /**
     * Processing Mode: When placing an order, different fields are returned based on action_mode. This field is only valid during the request and is not included in the response result ACK: Asynchronous mode, only returns key order fields RESULT: No clearing information FULL: Full mode (default)
     * @return actionMode
    **/
    @javax.annotation.Nullable
    public String getActionMode() {
        return actionMode;
    }


    public void setActionMode(String actionMode) {
        this.actionMode = actionMode;
    }
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        BatchAmendItem batchAmendItem = (BatchAmendItem) o;
        return Objects.equals(this.orderId, batchAmendItem.orderId) &&
                Objects.equals(this.currencyPair, batchAmendItem.currencyPair) &&
                Objects.equals(this.account, batchAmendItem.account) &&
                Objects.equals(this.amount, batchAmendItem.amount) &&
                Objects.equals(this.price, batchAmendItem.price) &&
                Objects.equals(this.amendText, batchAmendItem.amendText) &&
                Objects.equals(this.actionMode, batchAmendItem.actionMode);
    }

    @Override
    public int hashCode() {
        return Objects.hash(orderId, currencyPair, account, amount, price, amendText, actionMode);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class BatchAmendItem {\n");
        sb.append("      orderId: ").append(toIndentedString(orderId)).append("\n");
        sb.append("      currencyPair: ").append(toIndentedString(currencyPair)).append("\n");
        sb.append("      account: ").append(toIndentedString(account)).append("\n");
        sb.append("      amount: ").append(toIndentedString(amount)).append("\n");
        sb.append("      price: ").append(toIndentedString(price)).append("\n");
        sb.append("      amendText: ").append(toIndentedString(amendText)).append("\n");
        sb.append("      actionMode: ").append(toIndentedString(actionMode)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n        ");
    }

}

