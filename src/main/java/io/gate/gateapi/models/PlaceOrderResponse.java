/*
 * Gate API v4
 * Welcome to Gate API  APIv4 provides spot, margin and futures trading operations. There are public APIs to retrieve the real-time market statistics, and private APIs which needs authentication to trade on user's behalf. 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.gate.gateapi.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

/**
 * 下单返回
 */
public class PlaceOrderResponse {
    public static final String SERIALIZED_NAME_ORDER_ID = "order_id";
    @SerializedName(SERIALIZED_NAME_ORDER_ID)
    private String orderId;

    public static final String SERIALIZED_NAME_STATUS = "status";
    @SerializedName(SERIALIZED_NAME_STATUS)
    private Integer status;

    public static final String SERIALIZED_NAME_SIDE = "side";
    @SerializedName(SERIALIZED_NAME_SIDE)
    private String side;

    public static final String SERIALIZED_NAME_GAS_MODE = "gas_mode";
    @SerializedName(SERIALIZED_NAME_GAS_MODE)
    private String gasMode;

    public static final String SERIALIZED_NAME_CREATE_TIME = "create_time";
    @SerializedName(SERIALIZED_NAME_CREATE_TIME)
    private Long createTime;

    public static final String SERIALIZED_NAME_AMOUNT = "amount";
    @SerializedName(SERIALIZED_NAME_AMOUNT)
    private String amount;

    public static final String SERIALIZED_NAME_TOKEN_ADDRESS = "token_address";
    @SerializedName(SERIALIZED_NAME_TOKEN_ADDRESS)
    private String tokenAddress;

    public static final String SERIALIZED_NAME_CHAIN = "chain";
    @SerializedName(SERIALIZED_NAME_CHAIN)
    private String chain;


    public PlaceOrderResponse orderId(String orderId) {
        
        this.orderId = orderId;
        return this;
    }

     /**
     * Order ID
     * @return orderId
    **/
    @javax.annotation.Nullable
    public String getOrderId() {
        return orderId;
    }


    public void setOrderId(String orderId) {
        this.orderId = orderId;
    }

    public PlaceOrderResponse status(Integer status) {
        
        this.status = status;
        return this;
    }

     /**
     * Order Status - &#x60;0&#x60; : All - &#x60;1&#x60; : Processing - &#x60;2&#x60; : Successful - &#x60;3&#x60; : Failed - &#x60;4&#x60; : Canceled - &#x60;5&#x60; : Buy order placed but transfer not completed - &#x60;6&#x60; : Cancelled order with transfer not complete
     * @return status
    **/
    @javax.annotation.Nullable
    public Integer getStatus() {
        return status;
    }


    public void setStatus(Integer status) {
        this.status = status;
    }

    public PlaceOrderResponse side(String side) {
        
        this.side = side;
        return this;
    }

     /**
     * 买单或者卖单 - buy - sell
     * @return side
    **/
    @javax.annotation.Nullable
    public String getSide() {
        return side;
    }


    public void setSide(String side) {
        this.side = side;
    }

    public PlaceOrderResponse gasMode(String gasMode) {
        
        this.gasMode = gasMode;
        return this;
    }

     /**
     * Trading mode affects slippage selection - &#x60;speed&#x60; : Smart mode - &#x60;custom&#x60; : Custom mode, uses &#x60;slippage&#x60; parameter
     * @return gasMode
    **/
    @javax.annotation.Nullable
    public String getGasMode() {
        return gasMode;
    }


    public void setGasMode(String gasMode) {
        this.gasMode = gasMode;
    }

    public PlaceOrderResponse createTime(Long createTime) {
        
        this.createTime = createTime;
        return this;
    }

     /**
     * 创建时间 (时间戳)
     * @return createTime
    **/
    @javax.annotation.Nullable
    public Long getCreateTime() {
        return createTime;
    }


    public void setCreateTime(Long createTime) {
        this.createTime = createTime;
    }

    public PlaceOrderResponse amount(String amount) {
        
        this.amount = amount;
        return this;
    }

     /**
     * Trade Quantity - &#x60;side&#x60; : &#x60;buy&#x60; refers to the quote currency, i.e., &#x60;USDT&#x60; - &#x60;side&#x60; : &#x60;sell&#x60; refers to the base currency
     * @return amount
    **/
    @javax.annotation.Nullable
    public String getAmount() {
        return amount;
    }


    public void setAmount(String amount) {
        this.amount = amount;
    }

    public PlaceOrderResponse tokenAddress(String tokenAddress) {
        
        this.tokenAddress = tokenAddress;
        return this;
    }

     /**
     * 币地址
     * @return tokenAddress
    **/
    @javax.annotation.Nullable
    public String getTokenAddress() {
        return tokenAddress;
    }


    public void setTokenAddress(String tokenAddress) {
        this.tokenAddress = tokenAddress;
    }

    public PlaceOrderResponse chain(String chain) {
        
        this.chain = chain;
        return this;
    }

     /**
     * Chain name
     * @return chain
    **/
    @javax.annotation.Nullable
    public String getChain() {
        return chain;
    }


    public void setChain(String chain) {
        this.chain = chain;
    }
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        PlaceOrderResponse placeOrderResponse = (PlaceOrderResponse) o;
        return Objects.equals(this.orderId, placeOrderResponse.orderId) &&
                Objects.equals(this.status, placeOrderResponse.status) &&
                Objects.equals(this.side, placeOrderResponse.side) &&
                Objects.equals(this.gasMode, placeOrderResponse.gasMode) &&
                Objects.equals(this.createTime, placeOrderResponse.createTime) &&
                Objects.equals(this.amount, placeOrderResponse.amount) &&
                Objects.equals(this.tokenAddress, placeOrderResponse.tokenAddress) &&
                Objects.equals(this.chain, placeOrderResponse.chain);
    }

    @Override
    public int hashCode() {
        return Objects.hash(orderId, status, side, gasMode, createTime, amount, tokenAddress, chain);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class PlaceOrderResponse {\n");
        sb.append("      orderId: ").append(toIndentedString(orderId)).append("\n");
        sb.append("      status: ").append(toIndentedString(status)).append("\n");
        sb.append("      side: ").append(toIndentedString(side)).append("\n");
        sb.append("      gasMode: ").append(toIndentedString(gasMode)).append("\n");
        sb.append("      createTime: ").append(toIndentedString(createTime)).append("\n");
        sb.append("      amount: ").append(toIndentedString(amount)).append("\n");
        sb.append("      tokenAddress: ").append(toIndentedString(tokenAddress)).append("\n");
        sb.append("      chain: ").append(toIndentedString(chain)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n        ");
    }

}

