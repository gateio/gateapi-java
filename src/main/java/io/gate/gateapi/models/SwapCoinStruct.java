/*
 * Gate API
 * Welcome to Gate API  APIv4 provides operations related to spot, margin, and contract trading, including public interfaces for querying market data and authenticated private interfaces for implementing API-based automated trading.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.gate.gateapi.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

/**
 * SwapCoinStruct
 */
public class SwapCoinStruct {
    public static final String SERIALIZED_NAME_ID = "id";
    @SerializedName(SERIALIZED_NAME_ID)
    private Integer id;

    public static final String SERIALIZED_NAME_UID = "uid";
    @SerializedName(SERIALIZED_NAME_UID)
    private Integer uid;

    public static final String SERIALIZED_NAME_COIN = "coin";
    @SerializedName(SERIALIZED_NAME_COIN)
    private String coin;

    public static final String SERIALIZED_NAME_TYPE = "type";
    @SerializedName(SERIALIZED_NAME_TYPE)
    private Integer type;

    public static final String SERIALIZED_NAME_AMOUNT = "amount";
    @SerializedName(SERIALIZED_NAME_AMOUNT)
    private String amount;

    public static final String SERIALIZED_NAME_EXCHANGE_RATE = "exchange_rate";
    @SerializedName(SERIALIZED_NAME_EXCHANGE_RATE)
    private String exchangeRate;

    public static final String SERIALIZED_NAME_PID = "pid";
    @SerializedName(SERIALIZED_NAME_PID)
    private Integer pid;

    public static final String SERIALIZED_NAME_STATUS = "status";
    @SerializedName(SERIALIZED_NAME_STATUS)
    private Integer status;

    public static final String SERIALIZED_NAME_CREATE_STAMP = "createStamp";
    @SerializedName(SERIALIZED_NAME_CREATE_STAMP)
    private Integer createStamp;


    public SwapCoinStruct id(Integer id) {
        
        this.id = id;
        return this;
    }

     /**
     * Order ID
     * @return id
    **/
    @javax.annotation.Nullable
    public Integer getId() {
        return id;
    }


    public void setId(Integer id) {
        this.id = id;
    }

    public SwapCoinStruct uid(Integer uid) {
        
        this.uid = uid;
        return this;
    }

     /**
     * User ID
     * @return uid
    **/
    @javax.annotation.Nullable
    public Integer getUid() {
        return uid;
    }


    public void setUid(Integer uid) {
        this.uid = uid;
    }

    public SwapCoinStruct coin(String coin) {
        
        this.coin = coin;
        return this;
    }

     /**
     * Currency
     * @return coin
    **/
    @javax.annotation.Nullable
    public String getCoin() {
        return coin;
    }


    public void setCoin(String coin) {
        this.coin = coin;
    }

    public SwapCoinStruct type(Integer type) {
        
        this.type = type;
        return this;
    }

     /**
     * Type: 0-Lock, 1-Certificate
     * @return type
    **/
    @javax.annotation.Nullable
    public Integer getType() {
        return type;
    }


    public void setType(Integer type) {
        this.type = type;
    }

    public SwapCoinStruct amount(String amount) {
        
        this.amount = amount;
        return this;
    }

     /**
     * Amount
     * @return amount
    **/
    @javax.annotation.Nullable
    public String getAmount() {
        return amount;
    }


    public void setAmount(String amount) {
        this.amount = amount;
    }

    public SwapCoinStruct exchangeRate(String exchangeRate) {
        
        this.exchangeRate = exchangeRate;
        return this;
    }

     /**
     * Exchange Ratio
     * @return exchangeRate
    **/
    @javax.annotation.Nullable
    public String getExchangeRate() {
        return exchangeRate;
    }


    public void setExchangeRate(String exchangeRate) {
        this.exchangeRate = exchangeRate;
    }

    public SwapCoinStruct pid(Integer pid) {
        
        this.pid = pid;
        return this;
    }

     /**
     * Plan ID
     * @return pid
    **/
    @javax.annotation.Nullable
    public Integer getPid() {
        return pid;
    }


    public void setPid(Integer pid) {
        this.pid = pid;
    }

    public SwapCoinStruct status(Integer status) {
        
        this.status = status;
        return this;
    }

     /**
     * status 1-success
     * @return status
    **/
    @javax.annotation.Nullable
    public Integer getStatus() {
        return status;
    }


    public void setStatus(Integer status) {
        this.status = status;
    }

    public SwapCoinStruct createStamp(Integer createStamp) {
        
        this.createStamp = createStamp;
        return this;
    }

     /**
     * Transaction timestamp
     * @return createStamp
    **/
    @javax.annotation.Nullable
    public Integer getCreateStamp() {
        return createStamp;
    }


    public void setCreateStamp(Integer createStamp) {
        this.createStamp = createStamp;
    }
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        SwapCoinStruct swapCoinStruct = (SwapCoinStruct) o;
        return Objects.equals(this.id, swapCoinStruct.id) &&
                Objects.equals(this.uid, swapCoinStruct.uid) &&
                Objects.equals(this.coin, swapCoinStruct.coin) &&
                Objects.equals(this.type, swapCoinStruct.type) &&
                Objects.equals(this.amount, swapCoinStruct.amount) &&
                Objects.equals(this.exchangeRate, swapCoinStruct.exchangeRate) &&
                Objects.equals(this.pid, swapCoinStruct.pid) &&
                Objects.equals(this.status, swapCoinStruct.status) &&
                Objects.equals(this.createStamp, swapCoinStruct.createStamp);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, uid, coin, type, amount, exchangeRate, pid, status, createStamp);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class SwapCoinStruct {\n");
        sb.append("      id: ").append(toIndentedString(id)).append("\n");
        sb.append("      uid: ").append(toIndentedString(uid)).append("\n");
        sb.append("      coin: ").append(toIndentedString(coin)).append("\n");
        sb.append("      type: ").append(toIndentedString(type)).append("\n");
        sb.append("      amount: ").append(toIndentedString(amount)).append("\n");
        sb.append("      exchangeRate: ").append(toIndentedString(exchangeRate)).append("\n");
        sb.append("      pid: ").append(toIndentedString(pid)).append("\n");
        sb.append("      status: ").append(toIndentedString(status)).append("\n");
        sb.append("      createStamp: ").append(toIndentedString(createStamp)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n        ");
    }

}

