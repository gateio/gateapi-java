/*
 * Gate API v4
 * Welcome to Gate API  APIv4 provides spot, margin and futures trading operations. There are public APIs to retrieve the real-time market statistics, and private APIs which needs authentication to trade on user's behalf. 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.gate.gateapi.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

/**
 * 下单请求
 */
public class PlaceOrderRequest {
    public static final String SERIALIZED_NAME_CURRENCY = "currency";
    @SerializedName(SERIALIZED_NAME_CURRENCY)
    private String currency;

    public static final String SERIALIZED_NAME_SIDE = "side";
    @SerializedName(SERIALIZED_NAME_SIDE)
    private String side;

    public static final String SERIALIZED_NAME_AMOUNT = "amount";
    @SerializedName(SERIALIZED_NAME_AMOUNT)
    private String amount;

    public static final String SERIALIZED_NAME_GAS_MODE = "gas_mode";
    @SerializedName(SERIALIZED_NAME_GAS_MODE)
    private String gasMode;

    public static final String SERIALIZED_NAME_SLIPPAGE = "slippage";
    @SerializedName(SERIALIZED_NAME_SLIPPAGE)
    private String slippage;

    public static final String SERIALIZED_NAME_QUOTE_ID = "quote_id";
    @SerializedName(SERIALIZED_NAME_QUOTE_ID)
    private String quoteId;


    public PlaceOrderRequest currency(String currency) {
        
        this.currency = currency;
        return this;
    }

     /**
     * Trading Symbol
     * @return currency
    **/
    public String getCurrency() {
        return currency;
    }


    public void setCurrency(String currency) {
        this.currency = currency;
    }

    public PlaceOrderRequest side(String side) {
        
        this.side = side;
        return this;
    }

     /**
     * 买单或者卖单 - buy - sell
     * @return side
    **/
    public String getSide() {
        return side;
    }


    public void setSide(String side) {
        this.side = side;
    }

    public PlaceOrderRequest amount(String amount) {
        
        this.amount = amount;
        return this;
    }

     /**
     * Trade Quantity - &#x60;side&#x60; : &#x60;buy&#x60; refers to the quote currency, i.e., &#x60;USDT&#x60; - &#x60;side&#x60; : &#x60;sell&#x60; refers to the base currency
     * @return amount
    **/
    public String getAmount() {
        return amount;
    }


    public void setAmount(String amount) {
        this.amount = amount;
    }

    public PlaceOrderRequest gasMode(String gasMode) {
        
        this.gasMode = gasMode;
        return this;
    }

     /**
     * Trading mode affects slippage selection - &#x60;speed&#x60; : Smart mode - &#x60;custom&#x60; : Custom mode, uses &#x60;slippage&#x60; parameter
     * @return gasMode
    **/
    public String getGasMode() {
        return gasMode;
    }


    public void setGasMode(String gasMode) {
        this.gasMode = gasMode;
    }

    public PlaceOrderRequest slippage(String slippage) {
        
        this.slippage = slippage;
        return this;
    }

     /**
     * Slippage value of 10 represents a 10% tolerance
     * @return slippage
    **/
    @javax.annotation.Nullable
    public String getSlippage() {
        return slippage;
    }


    public void setSlippage(String slippage) {
        this.slippage = slippage;
    }

    public PlaceOrderRequest quoteId(String quoteId) {
        
        this.quoteId = quoteId;
        return this;
    }

     /**
     * The quote_id returned by the quotation API
     * @return quoteId
    **/
    public String getQuoteId() {
        return quoteId;
    }


    public void setQuoteId(String quoteId) {
        this.quoteId = quoteId;
    }
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        PlaceOrderRequest placeOrderRequest = (PlaceOrderRequest) o;
        return Objects.equals(this.currency, placeOrderRequest.currency) &&
                Objects.equals(this.side, placeOrderRequest.side) &&
                Objects.equals(this.amount, placeOrderRequest.amount) &&
                Objects.equals(this.gasMode, placeOrderRequest.gasMode) &&
                Objects.equals(this.slippage, placeOrderRequest.slippage) &&
                Objects.equals(this.quoteId, placeOrderRequest.quoteId);
    }

    @Override
    public int hashCode() {
        return Objects.hash(currency, side, amount, gasMode, slippage, quoteId);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class PlaceOrderRequest {\n");
        sb.append("      currency: ").append(toIndentedString(currency)).append("\n");
        sb.append("      side: ").append(toIndentedString(side)).append("\n");
        sb.append("      amount: ").append(toIndentedString(amount)).append("\n");
        sb.append("      gasMode: ").append(toIndentedString(gasMode)).append("\n");
        sb.append("      slippage: ").append(toIndentedString(slippage)).append("\n");
        sb.append("      quoteId: ").append(toIndentedString(quoteId)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n        ");
    }

}

