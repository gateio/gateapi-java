/*
 * Gate API v4
 * Welcome to Gate API  APIv4 provides spot, margin and futures trading operations. There are public APIs to retrieve the real-time market statistics, and private APIs which needs authentication to trade on user's behalf.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.gate.gateapi.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

/**
 * User&#39;s currency statistics data
 */
public class UserLtvInfo {
    public static final String SERIALIZED_NAME_COLLATERAL_CURRENCY = "collateral_currency";
    @SerializedName(SERIALIZED_NAME_COLLATERAL_CURRENCY)
    private String collateralCurrency;

    public static final String SERIALIZED_NAME_BORROW_CURRENCY = "borrow_currency";
    @SerializedName(SERIALIZED_NAME_BORROW_CURRENCY)
    private String borrowCurrency;

    public static final String SERIALIZED_NAME_INIT_LTV = "init_ltv";
    @SerializedName(SERIALIZED_NAME_INIT_LTV)
    private String initLtv;

    public static final String SERIALIZED_NAME_ALERT_LTV = "alert_ltv";
    @SerializedName(SERIALIZED_NAME_ALERT_LTV)
    private String alertLtv;

    public static final String SERIALIZED_NAME_LIQUIDATE_LTV = "liquidate_ltv";
    @SerializedName(SERIALIZED_NAME_LIQUIDATE_LTV)
    private String liquidateLtv;

    public static final String SERIALIZED_NAME_MIN_BORROW_AMOUNT = "min_borrow_amount";
    @SerializedName(SERIALIZED_NAME_MIN_BORROW_AMOUNT)
    private String minBorrowAmount;

    public static final String SERIALIZED_NAME_LEFT_BORROWABLE_AMOUNT = "left_borrowable_amount";
    @SerializedName(SERIALIZED_NAME_LEFT_BORROWABLE_AMOUNT)
    private String leftBorrowableAmount;


    public UserLtvInfo collateralCurrency(String collateralCurrency) {
        
        this.collateralCurrency = collateralCurrency;
        return this;
    }

     /**
     * Collateral
     * @return collateralCurrency
    **/
    @javax.annotation.Nullable
    public String getCollateralCurrency() {
        return collateralCurrency;
    }


    public void setCollateralCurrency(String collateralCurrency) {
        this.collateralCurrency = collateralCurrency;
    }

    public UserLtvInfo borrowCurrency(String borrowCurrency) {
        
        this.borrowCurrency = borrowCurrency;
        return this;
    }

     /**
     * Borrowed currency
     * @return borrowCurrency
    **/
    @javax.annotation.Nullable
    public String getBorrowCurrency() {
        return borrowCurrency;
    }


    public void setBorrowCurrency(String borrowCurrency) {
        this.borrowCurrency = borrowCurrency;
    }

    public UserLtvInfo initLtv(String initLtv) {
        
        this.initLtv = initLtv;
        return this;
    }

     /**
     * The initial collateralization rate
     * @return initLtv
    **/
    @javax.annotation.Nullable
    public String getInitLtv() {
        return initLtv;
    }


    public void setInitLtv(String initLtv) {
        this.initLtv = initLtv;
    }

    public UserLtvInfo alertLtv(String alertLtv) {
        
        this.alertLtv = alertLtv;
        return this;
    }

     /**
     * Warning collateralization ratio
     * @return alertLtv
    **/
    @javax.annotation.Nullable
    public String getAlertLtv() {
        return alertLtv;
    }


    public void setAlertLtv(String alertLtv) {
        this.alertLtv = alertLtv;
    }

    public UserLtvInfo liquidateLtv(String liquidateLtv) {
        
        this.liquidateLtv = liquidateLtv;
        return this;
    }

     /**
     * The liquidation collateralization rate
     * @return liquidateLtv
    **/
    @javax.annotation.Nullable
    public String getLiquidateLtv() {
        return liquidateLtv;
    }


    public void setLiquidateLtv(String liquidateLtv) {
        this.liquidateLtv = liquidateLtv;
    }

    public UserLtvInfo minBorrowAmount(String minBorrowAmount) {
        
        this.minBorrowAmount = minBorrowAmount;
        return this;
    }

     /**
     * Minimum borrowable amount for the loan currency
     * @return minBorrowAmount
    **/
    @javax.annotation.Nullable
    public String getMinBorrowAmount() {
        return minBorrowAmount;
    }


    public void setMinBorrowAmount(String minBorrowAmount) {
        this.minBorrowAmount = minBorrowAmount;
    }

    public UserLtvInfo leftBorrowableAmount(String leftBorrowableAmount) {
        
        this.leftBorrowableAmount = leftBorrowableAmount;
        return this;
    }

     /**
     * Remaining borrowable amount for the loan currency
     * @return leftBorrowableAmount
    **/
    @javax.annotation.Nullable
    public String getLeftBorrowableAmount() {
        return leftBorrowableAmount;
    }


    public void setLeftBorrowableAmount(String leftBorrowableAmount) {
        this.leftBorrowableAmount = leftBorrowableAmount;
    }
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        UserLtvInfo userLtvInfo = (UserLtvInfo) o;
        return Objects.equals(this.collateralCurrency, userLtvInfo.collateralCurrency) &&
                Objects.equals(this.borrowCurrency, userLtvInfo.borrowCurrency) &&
                Objects.equals(this.initLtv, userLtvInfo.initLtv) &&
                Objects.equals(this.alertLtv, userLtvInfo.alertLtv) &&
                Objects.equals(this.liquidateLtv, userLtvInfo.liquidateLtv) &&
                Objects.equals(this.minBorrowAmount, userLtvInfo.minBorrowAmount) &&
                Objects.equals(this.leftBorrowableAmount, userLtvInfo.leftBorrowableAmount);
    }

    @Override
    public int hashCode() {
        return Objects.hash(collateralCurrency, borrowCurrency, initLtv, alertLtv, liquidateLtv, minBorrowAmount, leftBorrowableAmount);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class UserLtvInfo {\n");
        sb.append("      collateralCurrency: ").append(toIndentedString(collateralCurrency)).append("\n");
        sb.append("      borrowCurrency: ").append(toIndentedString(borrowCurrency)).append("\n");
        sb.append("      initLtv: ").append(toIndentedString(initLtv)).append("\n");
        sb.append("      alertLtv: ").append(toIndentedString(alertLtv)).append("\n");
        sb.append("      liquidateLtv: ").append(toIndentedString(liquidateLtv)).append("\n");
        sb.append("      minBorrowAmount: ").append(toIndentedString(minBorrowAmount)).append("\n");
        sb.append("      leftBorrowableAmount: ").append(toIndentedString(leftBorrowableAmount)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n        ");
    }

}

