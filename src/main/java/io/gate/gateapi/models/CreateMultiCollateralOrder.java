/*
 * Gate API
 * Welcome to Gate API APIv4 provides operations related to spot, margin, and contract trading, including public interfaces for querying market data and authenticated private interfaces for implementing API-based automated trading.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.gate.gateapi.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.gate.gateapi.models.CollateralCurrency;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * CreateMultiCollateralOrder
 */
public class CreateMultiCollateralOrder {
    public static final String SERIALIZED_NAME_ORDER_ID = "order_id";
    @SerializedName(SERIALIZED_NAME_ORDER_ID)
    private String orderId;

    public static final String SERIALIZED_NAME_ORDER_TYPE = "order_type";
    @SerializedName(SERIALIZED_NAME_ORDER_TYPE)
    private String orderType;

    public static final String SERIALIZED_NAME_FIXED_TYPE = "fixed_type";
    @SerializedName(SERIALIZED_NAME_FIXED_TYPE)
    private String fixedType;

    public static final String SERIALIZED_NAME_FIXED_RATE = "fixed_rate";
    @SerializedName(SERIALIZED_NAME_FIXED_RATE)
    private String fixedRate;

    public static final String SERIALIZED_NAME_AUTO_RENEW = "auto_renew";
    @SerializedName(SERIALIZED_NAME_AUTO_RENEW)
    private Boolean autoRenew;

    public static final String SERIALIZED_NAME_AUTO_REPAY = "auto_repay";
    @SerializedName(SERIALIZED_NAME_AUTO_REPAY)
    private Boolean autoRepay;

    public static final String SERIALIZED_NAME_BORROW_CURRENCY = "borrow_currency";
    @SerializedName(SERIALIZED_NAME_BORROW_CURRENCY)
    private String borrowCurrency;

    public static final String SERIALIZED_NAME_BORROW_AMOUNT = "borrow_amount";
    @SerializedName(SERIALIZED_NAME_BORROW_AMOUNT)
    private String borrowAmount;

    public static final String SERIALIZED_NAME_COLLATERAL_CURRENCIES = "collateral_currencies";
    @SerializedName(SERIALIZED_NAME_COLLATERAL_CURRENCIES)
    private List<CollateralCurrency> collateralCurrencies = null;


    public CreateMultiCollateralOrder orderId(String orderId) {
        
        this.orderId = orderId;
        return this;
    }

     /**
     * Order ID
     * @return orderId
    **/
    @javax.annotation.Nullable
    public String getOrderId() {
        return orderId;
    }


    public void setOrderId(String orderId) {
        this.orderId = orderId;
    }

    public CreateMultiCollateralOrder orderType(String orderType) {
        
        this.orderType = orderType;
        return this;
    }

     /**
     * current - current rate, fixed - fixed rate, defaults to current if not specified
     * @return orderType
    **/
    @javax.annotation.Nullable
    public String getOrderType() {
        return orderType;
    }


    public void setOrderType(String orderType) {
        this.orderType = orderType;
    }

    public CreateMultiCollateralOrder fixedType(String fixedType) {
        
        this.fixedType = fixedType;
        return this;
    }

     /**
     * Fixed interest rate lending period: 7d - 7 days, 30d - 30 days. Required for fixed rate
     * @return fixedType
    **/
    @javax.annotation.Nullable
    public String getFixedType() {
        return fixedType;
    }


    public void setFixedType(String fixedType) {
        this.fixedType = fixedType;
    }

    public CreateMultiCollateralOrder fixedRate(String fixedRate) {
        
        this.fixedRate = fixedRate;
        return this;
    }

     /**
     * Fixed interest rate, required for fixed rate
     * @return fixedRate
    **/
    @javax.annotation.Nullable
    public String getFixedRate() {
        return fixedRate;
    }


    public void setFixedRate(String fixedRate) {
        this.fixedRate = fixedRate;
    }

    public CreateMultiCollateralOrder autoRenew(Boolean autoRenew) {
        
        this.autoRenew = autoRenew;
        return this;
    }

     /**
     * Fixed interest rate, auto-renewal
     * @return autoRenew
    **/
    @javax.annotation.Nullable
    public Boolean getAutoRenew() {
        return autoRenew;
    }


    public void setAutoRenew(Boolean autoRenew) {
        this.autoRenew = autoRenew;
    }

    public CreateMultiCollateralOrder autoRepay(Boolean autoRepay) {
        
        this.autoRepay = autoRepay;
        return this;
    }

     /**
     * Fixed interest rate, auto-repayment
     * @return autoRepay
    **/
    @javax.annotation.Nullable
    public Boolean getAutoRepay() {
        return autoRepay;
    }


    public void setAutoRepay(Boolean autoRepay) {
        this.autoRepay = autoRepay;
    }

    public CreateMultiCollateralOrder borrowCurrency(String borrowCurrency) {
        
        this.borrowCurrency = borrowCurrency;
        return this;
    }

     /**
     * Borrowed currency
     * @return borrowCurrency
    **/
    public String getBorrowCurrency() {
        return borrowCurrency;
    }


    public void setBorrowCurrency(String borrowCurrency) {
        this.borrowCurrency = borrowCurrency;
    }

    public CreateMultiCollateralOrder borrowAmount(String borrowAmount) {
        
        this.borrowAmount = borrowAmount;
        return this;
    }

     /**
     * Borrowed amount
     * @return borrowAmount
    **/
    public String getBorrowAmount() {
        return borrowAmount;
    }


    public void setBorrowAmount(String borrowAmount) {
        this.borrowAmount = borrowAmount;
    }

    public CreateMultiCollateralOrder collateralCurrencies(List<CollateralCurrency> collateralCurrencies) {
        
        this.collateralCurrencies = collateralCurrencies;
        return this;
    }

    public CreateMultiCollateralOrder addCollateralCurrenciesItem(CollateralCurrency collateralCurrenciesItem) {
        if (this.collateralCurrencies == null) {
            this.collateralCurrencies = new ArrayList<>();
        }
        this.collateralCurrencies.add(collateralCurrenciesItem);
        return this;
    }

     /**
     * Collateral currency and amount
     * @return collateralCurrencies
    **/
    @javax.annotation.Nullable
    public List<CollateralCurrency> getCollateralCurrencies() {
        return collateralCurrencies;
    }


    public void setCollateralCurrencies(List<CollateralCurrency> collateralCurrencies) {
        this.collateralCurrencies = collateralCurrencies;
    }
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CreateMultiCollateralOrder createMultiCollateralOrder = (CreateMultiCollateralOrder) o;
        return Objects.equals(this.orderId, createMultiCollateralOrder.orderId) &&
                Objects.equals(this.orderType, createMultiCollateralOrder.orderType) &&
                Objects.equals(this.fixedType, createMultiCollateralOrder.fixedType) &&
                Objects.equals(this.fixedRate, createMultiCollateralOrder.fixedRate) &&
                Objects.equals(this.autoRenew, createMultiCollateralOrder.autoRenew) &&
                Objects.equals(this.autoRepay, createMultiCollateralOrder.autoRepay) &&
                Objects.equals(this.borrowCurrency, createMultiCollateralOrder.borrowCurrency) &&
                Objects.equals(this.borrowAmount, createMultiCollateralOrder.borrowAmount) &&
                Objects.equals(this.collateralCurrencies, createMultiCollateralOrder.collateralCurrencies);
    }

    @Override
    public int hashCode() {
        return Objects.hash(orderId, orderType, fixedType, fixedRate, autoRenew, autoRepay, borrowCurrency, borrowAmount, collateralCurrencies);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class CreateMultiCollateralOrder {\n");
        sb.append("      orderId: ").append(toIndentedString(orderId)).append("\n");
        sb.append("      orderType: ").append(toIndentedString(orderType)).append("\n");
        sb.append("      fixedType: ").append(toIndentedString(fixedType)).append("\n");
        sb.append("      fixedRate: ").append(toIndentedString(fixedRate)).append("\n");
        sb.append("      autoRenew: ").append(toIndentedString(autoRenew)).append("\n");
        sb.append("      autoRepay: ").append(toIndentedString(autoRepay)).append("\n");
        sb.append("      borrowCurrency: ").append(toIndentedString(borrowCurrency)).append("\n");
        sb.append("      borrowAmount: ").append(toIndentedString(borrowAmount)).append("\n");
        sb.append("      collateralCurrencies: ").append(toIndentedString(collateralCurrencies)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n        ");
    }

}

