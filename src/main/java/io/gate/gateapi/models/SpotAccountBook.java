/*
 * Gate API
 * Welcome to Gate API  APIv4 provides operations related to spot, margin, and contract trading, including public interfaces for querying market data and authenticated private interfaces for implementing API-based automated trading.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.gate.gateapi.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

/**
 * SpotAccountBook
 */
public class SpotAccountBook {
    public static final String SERIALIZED_NAME_ID = "id";
    @SerializedName(SERIALIZED_NAME_ID)
    private String id;

    public static final String SERIALIZED_NAME_TIME = "time";
    @SerializedName(SERIALIZED_NAME_TIME)
    private Long time;

    public static final String SERIALIZED_NAME_CURRENCY = "currency";
    @SerializedName(SERIALIZED_NAME_CURRENCY)
    private String currency;

    public static final String SERIALIZED_NAME_CHANGE = "change";
    @SerializedName(SERIALIZED_NAME_CHANGE)
    private String change;

    public static final String SERIALIZED_NAME_BALANCE = "balance";
    @SerializedName(SERIALIZED_NAME_BALANCE)
    private String balance;

    public static final String SERIALIZED_NAME_TYPE = "type";
    @SerializedName(SERIALIZED_NAME_TYPE)
    private String type;

    public static final String SERIALIZED_NAME_CODE = "code";
    @SerializedName(SERIALIZED_NAME_CODE)
    private String code;

    public static final String SERIALIZED_NAME_TEXT = "text";
    @SerializedName(SERIALIZED_NAME_TEXT)
    private String text;


    public SpotAccountBook id(String id) {
        
        this.id = id;
        return this;
    }

     /**
     * Balance change record ID.
     * @return id
    **/
    @javax.annotation.Nullable
    public String getId() {
        return id;
    }


    public void setId(String id) {
        this.id = id;
    }

    public SpotAccountBook time(Long time) {
        
        this.time = time;
        return this;
    }

     /**
     * The timestamp of the change (in milliseconds).
     * @return time
    **/
    @javax.annotation.Nullable
    public Long getTime() {
        return time;
    }


    public void setTime(Long time) {
        this.time = time;
    }

    public SpotAccountBook currency(String currency) {
        
        this.currency = currency;
        return this;
    }

     /**
     * Currency changed.
     * @return currency
    **/
    @javax.annotation.Nullable
    public String getCurrency() {
        return currency;
    }


    public void setCurrency(String currency) {
        this.currency = currency;
    }

    public SpotAccountBook change(String change) {
        
        this.change = change;
        return this;
    }

     /**
     * Amount changed. Positive value means transferring in, while negative out.
     * @return change
    **/
    @javax.annotation.Nullable
    public String getChange() {
        return change;
    }


    public void setChange(String change) {
        this.change = change;
    }

    public SpotAccountBook balance(String balance) {
        
        this.balance = balance;
        return this;
    }

     /**
     * Balance after change.
     * @return balance
    **/
    @javax.annotation.Nullable
    public String getBalance() {
        return balance;
    }


    public void setBalance(String balance) {
        this.balance = balance;
    }

    public SpotAccountBook type(String type) {
        
        this.type = type;
        return this;
    }

     /**
     * Account book type. Please refer to [account book type](#accountbook-type) for more detail
     * @return type
    **/
    @javax.annotation.Nullable
    public String getType() {
        return type;
    }


    public void setType(String type) {
        this.type = type;
    }

    public SpotAccountBook code(String code) {
        
        this.code = code;
        return this;
    }

     /**
     * Account change code, see [Asset Record Code] (Asset Record Code).
     * @return code
    **/
    @javax.annotation.Nullable
    public String getCode() {
        return code;
    }


    public void setCode(String code) {
        this.code = code;
    }

    public SpotAccountBook text(String text) {
        
        this.text = text;
        return this;
    }

     /**
     * Additional information.
     * @return text
    **/
    @javax.annotation.Nullable
    public String getText() {
        return text;
    }


    public void setText(String text) {
        this.text = text;
    }
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        SpotAccountBook spotAccountBook = (SpotAccountBook) o;
        return Objects.equals(this.id, spotAccountBook.id) &&
                Objects.equals(this.time, spotAccountBook.time) &&
                Objects.equals(this.currency, spotAccountBook.currency) &&
                Objects.equals(this.change, spotAccountBook.change) &&
                Objects.equals(this.balance, spotAccountBook.balance) &&
                Objects.equals(this.type, spotAccountBook.type) &&
                Objects.equals(this.code, spotAccountBook.code) &&
                Objects.equals(this.text, spotAccountBook.text);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, time, currency, change, balance, type, code, text);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class SpotAccountBook {\n");
        sb.append("      id: ").append(toIndentedString(id)).append("\n");
        sb.append("      time: ").append(toIndentedString(time)).append("\n");
        sb.append("      currency: ").append(toIndentedString(currency)).append("\n");
        sb.append("      change: ").append(toIndentedString(change)).append("\n");
        sb.append("      balance: ").append(toIndentedString(balance)).append("\n");
        sb.append("      type: ").append(toIndentedString(type)).append("\n");
        sb.append("      code: ").append(toIndentedString(code)).append("\n");
        sb.append("      text: ").append(toIndentedString(text)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n        ");
    }

}

