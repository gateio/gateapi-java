/*
 * Gate API v4
 * Welcome to Gate API  APIv4 provides spot, margin and futures trading operations. There are public APIs to retrieve the real-time market statistics, and private APIs which needs authentication to trade on user's behalf. 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.gate.gateapi.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

/**
 * Ticker2
 */
public class Ticker2 {
    public static final String SERIALIZED_NAME_CURRENCY = "currency";
    @SerializedName(SERIALIZED_NAME_CURRENCY)
    private String currency;

    public static final String SERIALIZED_NAME_LAST = "last";
    @SerializedName(SERIALIZED_NAME_LAST)
    private String last;

    public static final String SERIALIZED_NAME_CHANGE = "change";
    @SerializedName(SERIALIZED_NAME_CHANGE)
    private String change;

    public static final String SERIALIZED_NAME_VOLUME = "volume";
    @SerializedName(SERIALIZED_NAME_VOLUME)
    private String volume;

    public static final String SERIALIZED_NAME_MARKET_CAP = "market_cap";
    @SerializedName(SERIALIZED_NAME_MARKET_CAP)
    private String marketCap;


    public Ticker2 currency(String currency) {
        
        this.currency = currency;
        return this;
    }

     /**
     * Currency symbol
     * @return currency
    **/
    @javax.annotation.Nullable
    public String getCurrency() {
        return currency;
    }


    public void setCurrency(String currency) {
        this.currency = currency;
    }

    public Ticker2 last(String last) {
        
        this.last = last;
        return this;
    }

     /**
     * Last trading price
     * @return last
    **/
    @javax.annotation.Nullable
    public String getLast() {
        return last;
    }


    public void setLast(String last) {
        this.last = last;
    }

    public Ticker2 change(String change) {
        
        this.change = change;
        return this;
    }

     /**
     * Change percentage in the last 24h
     * @return change
    **/
    @javax.annotation.Nullable
    public String getChange() {
        return change;
    }


    public void setChange(String change) {
        this.change = change;
    }

    public Ticker2 volume(String volume) {
        
        this.volume = volume;
        return this;
    }

     /**
     * 24h Trading Volume (USDT)
     * @return volume
    **/
    @javax.annotation.Nullable
    public String getVolume() {
        return volume;
    }


    public void setVolume(String volume) {
        this.volume = volume;
    }

    public Ticker2 marketCap(String marketCap) {
        
        this.marketCap = marketCap;
        return this;
    }

     /**
     * Current Coin Market Value
     * @return marketCap
    **/
    @javax.annotation.Nullable
    public String getMarketCap() {
        return marketCap;
    }


    public void setMarketCap(String marketCap) {
        this.marketCap = marketCap;
    }
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Ticker2 ticker2 = (Ticker2) o;
        return Objects.equals(this.currency, ticker2.currency) &&
                Objects.equals(this.last, ticker2.last) &&
                Objects.equals(this.change, ticker2.change) &&
                Objects.equals(this.volume, ticker2.volume) &&
                Objects.equals(this.marketCap, ticker2.marketCap);
    }

    @Override
    public int hashCode() {
        return Objects.hash(currency, last, change, volume, marketCap);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Ticker2 {\n");
        sb.append("      currency: ").append(toIndentedString(currency)).append("\n");
        sb.append("      last: ").append(toIndentedString(last)).append("\n");
        sb.append("      change: ").append(toIndentedString(change)).append("\n");
        sb.append("      volume: ").append(toIndentedString(volume)).append("\n");
        sb.append("      marketCap: ").append(toIndentedString(marketCap)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n        ");
    }

}

