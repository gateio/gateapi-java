/*
 * Gate API v4
 * Welcome to Gate API  APIv4 provides spot, margin and futures trading operations. There are public APIs to retrieve the real-time market statistics, and private APIs which needs authentication to trade on user's behalf. 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.gate.gateapi.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

/**
 * Quotation Response
 */
public class QuoteResponse {
    public static final String SERIALIZED_NAME_QUOTE_ID = "quote_id";
    @SerializedName(SERIALIZED_NAME_QUOTE_ID)
    private String quoteId;

    public static final String SERIALIZED_NAME_MIN_AMOUNT = "min_amount";
    @SerializedName(SERIALIZED_NAME_MIN_AMOUNT)
    private String minAmount;

    public static final String SERIALIZED_NAME_MAX_AMOUNT = "max_amount";
    @SerializedName(SERIALIZED_NAME_MAX_AMOUNT)
    private String maxAmount;

    public static final String SERIALIZED_NAME_PRICE = "price";
    @SerializedName(SERIALIZED_NAME_PRICE)
    private String price;

    public static final String SERIALIZED_NAME_SLIPPAGE = "slippage";
    @SerializedName(SERIALIZED_NAME_SLIPPAGE)
    private String slippage;

    public static final String SERIALIZED_NAME_ESTIMATE_GAS_FEE_AMOUNT_USDT = "estimate_gas_fee_amount_usdt";
    @SerializedName(SERIALIZED_NAME_ESTIMATE_GAS_FEE_AMOUNT_USDT)
    private String estimateGasFeeAmountUsdt;

    public static final String SERIALIZED_NAME_ORDER_FEE = "order_fee";
    @SerializedName(SERIALIZED_NAME_ORDER_FEE)
    private String orderFee;

    public static final String SERIALIZED_NAME_TARGET_TOKEN_MIN_AMOUNT = "target_token_min_amount";
    @SerializedName(SERIALIZED_NAME_TARGET_TOKEN_MIN_AMOUNT)
    private String targetTokenMinAmount;

    public static final String SERIALIZED_NAME_TARGET_TOKEN_MAX_AMOUNT = "target_token_max_amount";
    @SerializedName(SERIALIZED_NAME_TARGET_TOKEN_MAX_AMOUNT)
    private String targetTokenMaxAmount;

    public static final String SERIALIZED_NAME_ERROR_TYPE = "error_type";
    @SerializedName(SERIALIZED_NAME_ERROR_TYPE)
    private Integer errorType;


    public QuoteResponse quoteId(String quoteId) {
        
        this.quoteId = quoteId;
        return this;
    }

     /**
     * The quotation ID (quote_id) is used for placing orders and is valid for 1 minute
     * @return quoteId
    **/
    @javax.annotation.Nullable
    public String getQuoteId() {
        return quoteId;
    }


    public void setQuoteId(String quoteId) {
        this.quoteId = quoteId;
    }

    public QuoteResponse minAmount(String minAmount) {
        
        this.minAmount = minAmount;
        return this;
    }

     /**
     * 最小下单量
     * @return minAmount
    **/
    @javax.annotation.Nullable
    public String getMinAmount() {
        return minAmount;
    }


    public void setMinAmount(String minAmount) {
        this.minAmount = minAmount;
    }

    public QuoteResponse maxAmount(String maxAmount) {
        
        this.maxAmount = maxAmount;
        return this;
    }

     /**
     * 最大下单量
     * @return maxAmount
    **/
    @javax.annotation.Nullable
    public String getMaxAmount() {
        return maxAmount;
    }


    public void setMaxAmount(String maxAmount) {
        this.maxAmount = maxAmount;
    }

    public QuoteResponse price(String price) {
        
        this.price = price;
        return this;
    }

     /**
     * Coin Price (USDT-based)
     * @return price
    **/
    @javax.annotation.Nullable
    public String getPrice() {
        return price;
    }


    public void setPrice(String price) {
        this.price = price;
    }

    public QuoteResponse slippage(String slippage) {
        
        this.slippage = slippage;
        return this;
    }

     /**
     * Slippage
     * @return slippage
    **/
    @javax.annotation.Nullable
    public String getSlippage() {
        return slippage;
    }


    public void setSlippage(String slippage) {
        this.slippage = slippage;
    }

    public QuoteResponse estimateGasFeeAmountUsdt(String estimateGasFeeAmountUsdt) {
        
        this.estimateGasFeeAmountUsdt = estimateGasFeeAmountUsdt;
        return this;
    }

     /**
     * Estimated Network Fee (USDT-based)
     * @return estimateGasFeeAmountUsdt
    **/
    @javax.annotation.Nullable
    public String getEstimateGasFeeAmountUsdt() {
        return estimateGasFeeAmountUsdt;
    }


    public void setEstimateGasFeeAmountUsdt(String estimateGasFeeAmountUsdt) {
        this.estimateGasFeeAmountUsdt = estimateGasFeeAmountUsdt;
    }

    public QuoteResponse orderFee(String orderFee) {
        
        this.orderFee = orderFee;
        return this;
    }

     /**
     * Slippage value of 10 represents a 10% tolerance
     * @return orderFee
    **/
    @javax.annotation.Nullable
    public String getOrderFee() {
        return orderFee;
    }


    public void setOrderFee(String orderFee) {
        this.orderFee = orderFee;
    }

    public QuoteResponse targetTokenMinAmount(String targetTokenMinAmount) {
        
        this.targetTokenMinAmount = targetTokenMinAmount;
        return this;
    }

     /**
     * 最小获得数量
     * @return targetTokenMinAmount
    **/
    @javax.annotation.Nullable
    public String getTargetTokenMinAmount() {
        return targetTokenMinAmount;
    }


    public void setTargetTokenMinAmount(String targetTokenMinAmount) {
        this.targetTokenMinAmount = targetTokenMinAmount;
    }

    public QuoteResponse targetTokenMaxAmount(String targetTokenMaxAmount) {
        
        this.targetTokenMaxAmount = targetTokenMaxAmount;
        return this;
    }

     /**
     * 最大获得数量
     * @return targetTokenMaxAmount
    **/
    @javax.annotation.Nullable
    public String getTargetTokenMaxAmount() {
        return targetTokenMaxAmount;
    }


    public void setTargetTokenMaxAmount(String targetTokenMaxAmount) {
        this.targetTokenMaxAmount = targetTokenMaxAmount;
    }

    public QuoteResponse errorType(Integer errorType) {
        
        this.errorType = errorType;
        return this;
    }

     /**
     * Failure Type - &#x60;0&#x60; : Success - &#x60;1&#x60; : Exceeds maximum value - &#x60;2&#x60; : Below minimum value
     * @return errorType
    **/
    @javax.annotation.Nullable
    public Integer getErrorType() {
        return errorType;
    }


    public void setErrorType(Integer errorType) {
        this.errorType = errorType;
    }
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        QuoteResponse quoteResponse = (QuoteResponse) o;
        return Objects.equals(this.quoteId, quoteResponse.quoteId) &&
                Objects.equals(this.minAmount, quoteResponse.minAmount) &&
                Objects.equals(this.maxAmount, quoteResponse.maxAmount) &&
                Objects.equals(this.price, quoteResponse.price) &&
                Objects.equals(this.slippage, quoteResponse.slippage) &&
                Objects.equals(this.estimateGasFeeAmountUsdt, quoteResponse.estimateGasFeeAmountUsdt) &&
                Objects.equals(this.orderFee, quoteResponse.orderFee) &&
                Objects.equals(this.targetTokenMinAmount, quoteResponse.targetTokenMinAmount) &&
                Objects.equals(this.targetTokenMaxAmount, quoteResponse.targetTokenMaxAmount) &&
                Objects.equals(this.errorType, quoteResponse.errorType);
    }

    @Override
    public int hashCode() {
        return Objects.hash(quoteId, minAmount, maxAmount, price, slippage, estimateGasFeeAmountUsdt, orderFee, targetTokenMinAmount, targetTokenMaxAmount, errorType);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class QuoteResponse {\n");
        sb.append("      quoteId: ").append(toIndentedString(quoteId)).append("\n");
        sb.append("      minAmount: ").append(toIndentedString(minAmount)).append("\n");
        sb.append("      maxAmount: ").append(toIndentedString(maxAmount)).append("\n");
        sb.append("      price: ").append(toIndentedString(price)).append("\n");
        sb.append("      slippage: ").append(toIndentedString(slippage)).append("\n");
        sb.append("      estimateGasFeeAmountUsdt: ").append(toIndentedString(estimateGasFeeAmountUsdt)).append("\n");
        sb.append("      orderFee: ").append(toIndentedString(orderFee)).append("\n");
        sb.append("      targetTokenMinAmount: ").append(toIndentedString(targetTokenMinAmount)).append("\n");
        sb.append("      targetTokenMaxAmount: ").append(toIndentedString(targetTokenMaxAmount)).append("\n");
        sb.append("      errorType: ").append(toIndentedString(errorType)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n        ");
    }

}

