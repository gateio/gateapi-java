/*
 * Gate API
 * Welcome to Gate API  APIv4 provides operations related to spot, margin, and contract trading, including public interfaces for querying market data and authenticated private interfaces for implementing API-based automated trading.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.gate.gateapi.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

/**
 * RepayCurrencyRes
 */
public class RepayCurrencyRes {
    public static final String SERIALIZED_NAME_SUCCEEDED = "succeeded";
    @SerializedName(SERIALIZED_NAME_SUCCEEDED)
    private Boolean succeeded;

    public static final String SERIALIZED_NAME_LABEL = "label";
    @SerializedName(SERIALIZED_NAME_LABEL)
    private String label;

    public static final String SERIALIZED_NAME_MESSAGE = "message";
    @SerializedName(SERIALIZED_NAME_MESSAGE)
    private String message;

    public static final String SERIALIZED_NAME_CURRENCY = "currency";
    @SerializedName(SERIALIZED_NAME_CURRENCY)
    private String currency;

    public static final String SERIALIZED_NAME_REPAID_PRINCIPAL = "repaid_principal";
    @SerializedName(SERIALIZED_NAME_REPAID_PRINCIPAL)
    private String repaidPrincipal;

    public static final String SERIALIZED_NAME_REPAID_INTEREST = "repaid_interest";
    @SerializedName(SERIALIZED_NAME_REPAID_INTEREST)
    private String repaidInterest;


    public RepayCurrencyRes succeeded(Boolean succeeded) {
        
        this.succeeded = succeeded;
        return this;
    }

     /**
     * Has the repayment been successful
     * @return succeeded
    **/
    @javax.annotation.Nullable
    public Boolean getSucceeded() {
        return succeeded;
    }


    public void setSucceeded(Boolean succeeded) {
        this.succeeded = succeeded;
    }

    public RepayCurrencyRes label(String label) {
        
        this.label = label;
        return this;
    }

     /**
     * Error identifier for unsuccessful operations; empty for successful.
     * @return label
    **/
    @javax.annotation.Nullable
    public String getLabel() {
        return label;
    }


    public void setLabel(String label) {
        this.label = label;
    }

    public RepayCurrencyRes message(String message) {
        
        this.message = message;
        return this;
    }

     /**
     * Error description in case of operation failure; empty when successful.
     * @return message
    **/
    @javax.annotation.Nullable
    public String getMessage() {
        return message;
    }


    public void setMessage(String message) {
        this.message = message;
    }

    public RepayCurrencyRes currency(String currency) {
        
        this.currency = currency;
        return this;
    }

     /**
     * Repayment currency
     * @return currency
    **/
    @javax.annotation.Nullable
    public String getCurrency() {
        return currency;
    }


    public void setCurrency(String currency) {
        this.currency = currency;
    }

    public RepayCurrencyRes repaidPrincipal(String repaidPrincipal) {
        
        this.repaidPrincipal = repaidPrincipal;
        return this;
    }

     /**
     * Principal
     * @return repaidPrincipal
    **/
    @javax.annotation.Nullable
    public String getRepaidPrincipal() {
        return repaidPrincipal;
    }


    public void setRepaidPrincipal(String repaidPrincipal) {
        this.repaidPrincipal = repaidPrincipal;
    }

    public RepayCurrencyRes repaidInterest(String repaidInterest) {
        
        this.repaidInterest = repaidInterest;
        return this;
    }

     /**
     * Principal
     * @return repaidInterest
    **/
    @javax.annotation.Nullable
    public String getRepaidInterest() {
        return repaidInterest;
    }


    public void setRepaidInterest(String repaidInterest) {
        this.repaidInterest = repaidInterest;
    }
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        RepayCurrencyRes repayCurrencyRes = (RepayCurrencyRes) o;
        return Objects.equals(this.succeeded, repayCurrencyRes.succeeded) &&
                Objects.equals(this.label, repayCurrencyRes.label) &&
                Objects.equals(this.message, repayCurrencyRes.message) &&
                Objects.equals(this.currency, repayCurrencyRes.currency) &&
                Objects.equals(this.repaidPrincipal, repayCurrencyRes.repaidPrincipal) &&
                Objects.equals(this.repaidInterest, repayCurrencyRes.repaidInterest);
    }

    @Override
    public int hashCode() {
        return Objects.hash(succeeded, label, message, currency, repaidPrincipal, repaidInterest);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class RepayCurrencyRes {\n");
        sb.append("      succeeded: ").append(toIndentedString(succeeded)).append("\n");
        sb.append("      label: ").append(toIndentedString(label)).append("\n");
        sb.append("      message: ").append(toIndentedString(message)).append("\n");
        sb.append("      currency: ").append(toIndentedString(currency)).append("\n");
        sb.append("      repaidPrincipal: ").append(toIndentedString(repaidPrincipal)).append("\n");
        sb.append("      repaidInterest: ").append(toIndentedString(repaidInterest)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n        ");
    }

}

