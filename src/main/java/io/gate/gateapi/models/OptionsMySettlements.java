/*
 * Gate API v4
 * Welcome to Gate.io API  APIv4 provides spot, margin and futures trading operations. There are public APIs to retrieve the real-time market statistics, and private APIs which needs authentication to trade on user's behalf.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.gate.gateapi.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

/**
 * OptionsMySettlements
 */
public class OptionsMySettlements {
    public static final String SERIALIZED_NAME_TIME = "time";
    @SerializedName(SERIALIZED_NAME_TIME)
    private Double time;

    public static final String SERIALIZED_NAME_UNDERLYING = "underlying";
    @SerializedName(SERIALIZED_NAME_UNDERLYING)
    private String underlying;

    public static final String SERIALIZED_NAME_CONTRACT = "contract";
    @SerializedName(SERIALIZED_NAME_CONTRACT)
    private String contract;

    public static final String SERIALIZED_NAME_STRIKE_PRICE = "strike_price";
    @SerializedName(SERIALIZED_NAME_STRIKE_PRICE)
    private String strikePrice;

    public static final String SERIALIZED_NAME_SETTLE_PRICE = "settle_price";
    @SerializedName(SERIALIZED_NAME_SETTLE_PRICE)
    private String settlePrice;

    public static final String SERIALIZED_NAME_SIZE = "size";
    @SerializedName(SERIALIZED_NAME_SIZE)
    private Long size;

    public static final String SERIALIZED_NAME_SETTLE_PROFIT = "settle_profit";
    @SerializedName(SERIALIZED_NAME_SETTLE_PROFIT)
    private String settleProfit;

    public static final String SERIALIZED_NAME_FEE = "fee";
    @SerializedName(SERIALIZED_NAME_FEE)
    private String fee;

    public static final String SERIALIZED_NAME_REALISED_PNL = "realised_pnl";
    @SerializedName(SERIALIZED_NAME_REALISED_PNL)
    private String realisedPnl;


    public OptionsMySettlements time(Double time) {
        
        this.time = time;
        return this;
    }

     /**
     * Settlement time
     * @return time
    **/
    @javax.annotation.Nullable
    public Double getTime() {
        return time;
    }


    public void setTime(Double time) {
        this.time = time;
    }

    public OptionsMySettlements underlying(String underlying) {
        
        this.underlying = underlying;
        return this;
    }

     /**
     * Underlying
     * @return underlying
    **/
    @javax.annotation.Nullable
    public String getUnderlying() {
        return underlying;
    }


    public void setUnderlying(String underlying) {
        this.underlying = underlying;
    }

    public OptionsMySettlements contract(String contract) {
        
        this.contract = contract;
        return this;
    }

     /**
     * Options contract name
     * @return contract
    **/
    @javax.annotation.Nullable
    public String getContract() {
        return contract;
    }


    public void setContract(String contract) {
        this.contract = contract;
    }

    public OptionsMySettlements strikePrice(String strikePrice) {
        
        this.strikePrice = strikePrice;
        return this;
    }

     /**
     * Strike price (quote currency)
     * @return strikePrice
    **/
    @javax.annotation.Nullable
    public String getStrikePrice() {
        return strikePrice;
    }


    public void setStrikePrice(String strikePrice) {
        this.strikePrice = strikePrice;
    }

    public OptionsMySettlements settlePrice(String settlePrice) {
        
        this.settlePrice = settlePrice;
        return this;
    }

     /**
     * Settlement price (quote currency)
     * @return settlePrice
    **/
    @javax.annotation.Nullable
    public String getSettlePrice() {
        return settlePrice;
    }


    public void setSettlePrice(String settlePrice) {
        this.settlePrice = settlePrice;
    }

    public OptionsMySettlements size(Long size) {
        
        this.size = size;
        return this;
    }

     /**
     * Size
     * @return size
    **/
    @javax.annotation.Nullable
    public Long getSize() {
        return size;
    }


    public void setSize(Long size) {
        this.size = size;
    }

    public OptionsMySettlements settleProfit(String settleProfit) {
        
        this.settleProfit = settleProfit;
        return this;
    }

     /**
     * Settlement profit (quote currency)
     * @return settleProfit
    **/
    @javax.annotation.Nullable
    public String getSettleProfit() {
        return settleProfit;
    }


    public void setSettleProfit(String settleProfit) {
        this.settleProfit = settleProfit;
    }

    public OptionsMySettlements fee(String fee) {
        
        this.fee = fee;
        return this;
    }

     /**
     * Fee (quote currency)
     * @return fee
    **/
    @javax.annotation.Nullable
    public String getFee() {
        return fee;
    }


    public void setFee(String fee) {
        this.fee = fee;
    }

    public OptionsMySettlements realisedPnl(String realisedPnl) {
        
        this.realisedPnl = realisedPnl;
        return this;
    }

     /**
     * The accumulated profit and loss of opening a position, including premium, fee, settlement profit, etc. (quote currency)
     * @return realisedPnl
    **/
    @javax.annotation.Nullable
    public String getRealisedPnl() {
        return realisedPnl;
    }


    public void setRealisedPnl(String realisedPnl) {
        this.realisedPnl = realisedPnl;
    }
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        OptionsMySettlements optionsMySettlements = (OptionsMySettlements) o;
        return Objects.equals(this.time, optionsMySettlements.time) &&
                Objects.equals(this.underlying, optionsMySettlements.underlying) &&
                Objects.equals(this.contract, optionsMySettlements.contract) &&
                Objects.equals(this.strikePrice, optionsMySettlements.strikePrice) &&
                Objects.equals(this.settlePrice, optionsMySettlements.settlePrice) &&
                Objects.equals(this.size, optionsMySettlements.size) &&
                Objects.equals(this.settleProfit, optionsMySettlements.settleProfit) &&
                Objects.equals(this.fee, optionsMySettlements.fee) &&
                Objects.equals(this.realisedPnl, optionsMySettlements.realisedPnl);
    }

    @Override
    public int hashCode() {
        return Objects.hash(time, underlying, contract, strikePrice, settlePrice, size, settleProfit, fee, realisedPnl);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class OptionsMySettlements {\n");
        sb.append("      time: ").append(toIndentedString(time)).append("\n");
        sb.append("      underlying: ").append(toIndentedString(underlying)).append("\n");
        sb.append("      contract: ").append(toIndentedString(contract)).append("\n");
        sb.append("      strikePrice: ").append(toIndentedString(strikePrice)).append("\n");
        sb.append("      settlePrice: ").append(toIndentedString(settlePrice)).append("\n");
        sb.append("      size: ").append(toIndentedString(size)).append("\n");
        sb.append("      settleProfit: ").append(toIndentedString(settleProfit)).append("\n");
        sb.append("      fee: ").append(toIndentedString(fee)).append("\n");
        sb.append("      realisedPnl: ").append(toIndentedString(realisedPnl)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n        ");
    }

}

