/*
 * Gate API
 * Welcome to Gate API APIv4 provides operations related to spot, margin, and contract trading, including public interfaces for querying market data and authenticated private interfaces for implementing API-based automated trading.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.gate.gateapi.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

/**
 * UidPushOrder
 */
public class UidPushOrder {
    public static final String SERIALIZED_NAME_ID = "id";
    @SerializedName(SERIALIZED_NAME_ID)
    private Long id;

    public static final String SERIALIZED_NAME_PUSH_UID = "push_uid";
    @SerializedName(SERIALIZED_NAME_PUSH_UID)
    private Long pushUid;

    public static final String SERIALIZED_NAME_RECEIVE_UID = "receive_uid";
    @SerializedName(SERIALIZED_NAME_RECEIVE_UID)
    private Long receiveUid;

    public static final String SERIALIZED_NAME_CURRENCY = "currency";
    @SerializedName(SERIALIZED_NAME_CURRENCY)
    private String currency;

    public static final String SERIALIZED_NAME_AMOUNT = "amount";
    @SerializedName(SERIALIZED_NAME_AMOUNT)
    private String amount;

    public static final String SERIALIZED_NAME_CREATE_TIME = "create_time";
    @SerializedName(SERIALIZED_NAME_CREATE_TIME)
    private Long createTime;

    public static final String SERIALIZED_NAME_STATUS = "status";
    @SerializedName(SERIALIZED_NAME_STATUS)
    private String status;

    public static final String SERIALIZED_NAME_MESSAGE = "message";
    @SerializedName(SERIALIZED_NAME_MESSAGE)
    private String message;

    public static final String SERIALIZED_NAME_TRANSACTION_TYPE = "transaction_type";
    @SerializedName(SERIALIZED_NAME_TRANSACTION_TYPE)
    private String transactionType;


    public UidPushOrder id(Long id) {
        
        this.id = id;
        return this;
    }

     /**
     * Order ID
     * @return id
    **/
    @javax.annotation.Nullable
    public Long getId() {
        return id;
    }


    public void setId(Long id) {
        this.id = id;
    }

    public UidPushOrder pushUid(Long pushUid) {
        
        this.pushUid = pushUid;
        return this;
    }

     /**
     * Initiator User ID
     * @return pushUid
    **/
    @javax.annotation.Nullable
    public Long getPushUid() {
        return pushUid;
    }


    public void setPushUid(Long pushUid) {
        this.pushUid = pushUid;
    }

    public UidPushOrder receiveUid(Long receiveUid) {
        
        this.receiveUid = receiveUid;
        return this;
    }

     /**
     * Recipient User ID
     * @return receiveUid
    **/
    @javax.annotation.Nullable
    public Long getReceiveUid() {
        return receiveUid;
    }


    public void setReceiveUid(Long receiveUid) {
        this.receiveUid = receiveUid;
    }

    public UidPushOrder currency(String currency) {
        
        this.currency = currency;
        return this;
    }

     /**
     * Currency name
     * @return currency
    **/
    @javax.annotation.Nullable
    public String getCurrency() {
        return currency;
    }


    public void setCurrency(String currency) {
        this.currency = currency;
    }

    public UidPushOrder amount(String amount) {
        
        this.amount = amount;
        return this;
    }

     /**
     * Transfer amount
     * @return amount
    **/
    @javax.annotation.Nullable
    public String getAmount() {
        return amount;
    }


    public void setAmount(String amount) {
        this.amount = amount;
    }

    public UidPushOrder createTime(Long createTime) {
        
        this.createTime = createTime;
        return this;
    }

     /**
     * Created time
     * @return createTime
    **/
    @javax.annotation.Nullable
    public Long getCreateTime() {
        return createTime;
    }


    public void setCreateTime(Long createTime) {
        this.createTime = createTime;
    }

    public UidPushOrder status(String status) {
        
        this.status = status;
        return this;
    }

     /**
     * Withdrawal status:  - CREATING: Creating - PENDING: Waiting for recipient (Please contact the recipient to accept the transfer on Gate official website) - CANCELLING: Cancelling - CANCELLED: Cancelled - REFUSING: Refusing - REFUSED: Refused - RECEIVING: Receiving - RECEIVED: Success
     * @return status
    **/
    @javax.annotation.Nullable
    public String getStatus() {
        return status;
    }


    public void setStatus(String status) {
        this.status = status;
    }

    public UidPushOrder message(String message) {
        
        this.message = message;
        return this;
    }

     /**
     * PENDING reason tips
     * @return message
    **/
    @javax.annotation.Nullable
    public String getMessage() {
        return message;
    }


    public void setMessage(String message) {
        this.message = message;
    }

    public UidPushOrder transactionType(String transactionType) {
        
        this.transactionType = transactionType;
        return this;
    }

     /**
     * Order Type
     * @return transactionType
    **/
    @javax.annotation.Nullable
    public String getTransactionType() {
        return transactionType;
    }


    public void setTransactionType(String transactionType) {
        this.transactionType = transactionType;
    }
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        UidPushOrder uidPushOrder = (UidPushOrder) o;
        return Objects.equals(this.id, uidPushOrder.id) &&
                Objects.equals(this.pushUid, uidPushOrder.pushUid) &&
                Objects.equals(this.receiveUid, uidPushOrder.receiveUid) &&
                Objects.equals(this.currency, uidPushOrder.currency) &&
                Objects.equals(this.amount, uidPushOrder.amount) &&
                Objects.equals(this.createTime, uidPushOrder.createTime) &&
                Objects.equals(this.status, uidPushOrder.status) &&
                Objects.equals(this.message, uidPushOrder.message) &&
                Objects.equals(this.transactionType, uidPushOrder.transactionType);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, pushUid, receiveUid, currency, amount, createTime, status, message, transactionType);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class UidPushOrder {\n");
        sb.append("      id: ").append(toIndentedString(id)).append("\n");
        sb.append("      pushUid: ").append(toIndentedString(pushUid)).append("\n");
        sb.append("      receiveUid: ").append(toIndentedString(receiveUid)).append("\n");
        sb.append("      currency: ").append(toIndentedString(currency)).append("\n");
        sb.append("      amount: ").append(toIndentedString(amount)).append("\n");
        sb.append("      createTime: ").append(toIndentedString(createTime)).append("\n");
        sb.append("      status: ").append(toIndentedString(status)).append("\n");
        sb.append("      message: ").append(toIndentedString(message)).append("\n");
        sb.append("      transactionType: ").append(toIndentedString(transactionType)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n        ");
    }

}

