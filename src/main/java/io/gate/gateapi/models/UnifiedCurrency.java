/*
 * Gate API v4
 * Welcome to Gate API  APIv4 provides spot, margin and futures trading operations. There are public APIs to retrieve the real-time market statistics, and private APIs which needs authentication to trade on user's behalf. 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.gate.gateapi.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

/**
 * UnifiedCurrency
 */
public class UnifiedCurrency {
    public static final String SERIALIZED_NAME_NAME = "name";
    @SerializedName(SERIALIZED_NAME_NAME)
    private String name;

    public static final String SERIALIZED_NAME_PREC = "prec";
    @SerializedName(SERIALIZED_NAME_PREC)
    private String prec;

    public static final String SERIALIZED_NAME_MIN_BORROW_AMOUNT = "min_borrow_amount";
    @SerializedName(SERIALIZED_NAME_MIN_BORROW_AMOUNT)
    private String minBorrowAmount;

    public static final String SERIALIZED_NAME_USER_MAX_BORROW_AMOUNT = "user_max_borrow_amount";
    @SerializedName(SERIALIZED_NAME_USER_MAX_BORROW_AMOUNT)
    private String userMaxBorrowAmount;

    public static final String SERIALIZED_NAME_TOTAL_MAX_BORROW_AMOUNT = "total_max_borrow_amount";
    @SerializedName(SERIALIZED_NAME_TOTAL_MAX_BORROW_AMOUNT)
    private String totalMaxBorrowAmount;

    public static final String SERIALIZED_NAME_LOAN_STATUS = "loan_status";
    @SerializedName(SERIALIZED_NAME_LOAN_STATUS)
    private String loanStatus;


    public UnifiedCurrency name(String name) {
        
        this.name = name;
        return this;
    }

     /**
     * Currency name
     * @return name
    **/
    @javax.annotation.Nullable
    public String getName() {
        return name;
    }


    public void setName(String name) {
        this.name = name;
    }

    public UnifiedCurrency prec(String prec) {
        
        this.prec = prec;
        return this;
    }

     /**
     * Currency precision
     * @return prec
    **/
    @javax.annotation.Nullable
    public String getPrec() {
        return prec;
    }


    public void setPrec(String prec) {
        this.prec = prec;
    }

    public UnifiedCurrency minBorrowAmount(String minBorrowAmount) {
        
        this.minBorrowAmount = minBorrowAmount;
        return this;
    }

     /**
     * The minimum debit limit is the unit of currency
     * @return minBorrowAmount
    **/
    @javax.annotation.Nullable
    public String getMinBorrowAmount() {
        return minBorrowAmount;
    }


    public void setMinBorrowAmount(String minBorrowAmount) {
        this.minBorrowAmount = minBorrowAmount;
    }

    public UnifiedCurrency userMaxBorrowAmount(String userMaxBorrowAmount) {
        
        this.userMaxBorrowAmount = userMaxBorrowAmount;
        return this;
    }

     /**
     * The minimum debit limit is the unit of currency
     * @return userMaxBorrowAmount
    **/
    @javax.annotation.Nullable
    public String getUserMaxBorrowAmount() {
        return userMaxBorrowAmount;
    }


    public void setUserMaxBorrowAmount(String userMaxBorrowAmount) {
        this.userMaxBorrowAmount = userMaxBorrowAmount;
    }

    public UnifiedCurrency totalMaxBorrowAmount(String totalMaxBorrowAmount) {
        
        this.totalMaxBorrowAmount = totalMaxBorrowAmount;
        return this;
    }

     /**
     * The maximum debit limit for the platform is USDT
     * @return totalMaxBorrowAmount
    **/
    @javax.annotation.Nullable
    public String getTotalMaxBorrowAmount() {
        return totalMaxBorrowAmount;
    }


    public void setTotalMaxBorrowAmount(String totalMaxBorrowAmount) {
        this.totalMaxBorrowAmount = totalMaxBorrowAmount;
    }

    public UnifiedCurrency loanStatus(String loanStatus) {
        
        this.loanStatus = loanStatus;
        return this;
    }

     /**
     * Does the lending status  - &#x60;disable&#x60; : Loans are prohibited  - &#x60;enable&#x60;: Support lending
     * @return loanStatus
    **/
    @javax.annotation.Nullable
    public String getLoanStatus() {
        return loanStatus;
    }


    public void setLoanStatus(String loanStatus) {
        this.loanStatus = loanStatus;
    }
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        UnifiedCurrency unifiedCurrency = (UnifiedCurrency) o;
        return Objects.equals(this.name, unifiedCurrency.name) &&
                Objects.equals(this.prec, unifiedCurrency.prec) &&
                Objects.equals(this.minBorrowAmount, unifiedCurrency.minBorrowAmount) &&
                Objects.equals(this.userMaxBorrowAmount, unifiedCurrency.userMaxBorrowAmount) &&
                Objects.equals(this.totalMaxBorrowAmount, unifiedCurrency.totalMaxBorrowAmount) &&
                Objects.equals(this.loanStatus, unifiedCurrency.loanStatus);
    }

    @Override
    public int hashCode() {
        return Objects.hash(name, prec, minBorrowAmount, userMaxBorrowAmount, totalMaxBorrowAmount, loanStatus);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class UnifiedCurrency {\n");
        sb.append("      name: ").append(toIndentedString(name)).append("\n");
        sb.append("      prec: ").append(toIndentedString(prec)).append("\n");
        sb.append("      minBorrowAmount: ").append(toIndentedString(minBorrowAmount)).append("\n");
        sb.append("      userMaxBorrowAmount: ").append(toIndentedString(userMaxBorrowAmount)).append("\n");
        sb.append("      totalMaxBorrowAmount: ").append(toIndentedString(totalMaxBorrowAmount)).append("\n");
        sb.append("      loanStatus: ").append(toIndentedString(loanStatus)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n        ");
    }

}

