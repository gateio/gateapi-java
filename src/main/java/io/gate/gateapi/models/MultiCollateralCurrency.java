/*
 * Gate API
 * Welcome to Gate API  APIv4 provides operations related to spot, margin, and contract trading, including public interfaces for querying market data and authenticated private interfaces for implementing API-based automated trading.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.gate.gateapi.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.gate.gateapi.models.MultiCollateralItem;
import io.gate.gateapi.models.MultiLoanItem;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Borrowing and collateral currencies supported for Multi-Collateral.
 */
public class MultiCollateralCurrency {
    public static final String SERIALIZED_NAME_LOAN_CURRENCIES = "loan_currencies";
    @SerializedName(SERIALIZED_NAME_LOAN_CURRENCIES)
    private List<MultiLoanItem> loanCurrencies = null;

    public static final String SERIALIZED_NAME_COLLATERAL_CURRENCIES = "collateral_currencies";
    @SerializedName(SERIALIZED_NAME_COLLATERAL_CURRENCIES)
    private List<MultiCollateralItem> collateralCurrencies = null;


    public MultiCollateralCurrency loanCurrencies(List<MultiLoanItem> loanCurrencies) {
        
        this.loanCurrencies = loanCurrencies;
        return this;
    }

    public MultiCollateralCurrency addLoanCurrenciesItem(MultiLoanItem loanCurrenciesItem) {
        if (this.loanCurrencies == null) {
            this.loanCurrencies = new ArrayList<>();
        }
        this.loanCurrencies.add(loanCurrenciesItem);
        return this;
    }

     /**
     * List of supported borrowing currencies
     * @return loanCurrencies
    **/
    @javax.annotation.Nullable
    public List<MultiLoanItem> getLoanCurrencies() {
        return loanCurrencies;
    }


    public void setLoanCurrencies(List<MultiLoanItem> loanCurrencies) {
        this.loanCurrencies = loanCurrencies;
    }

    public MultiCollateralCurrency collateralCurrencies(List<MultiCollateralItem> collateralCurrencies) {
        
        this.collateralCurrencies = collateralCurrencies;
        return this;
    }

    public MultiCollateralCurrency addCollateralCurrenciesItem(MultiCollateralItem collateralCurrenciesItem) {
        if (this.collateralCurrencies == null) {
            this.collateralCurrencies = new ArrayList<>();
        }
        this.collateralCurrencies.add(collateralCurrenciesItem);
        return this;
    }

     /**
     * List of supported collateral currencies
     * @return collateralCurrencies
    **/
    @javax.annotation.Nullable
    public List<MultiCollateralItem> getCollateralCurrencies() {
        return collateralCurrencies;
    }


    public void setCollateralCurrencies(List<MultiCollateralItem> collateralCurrencies) {
        this.collateralCurrencies = collateralCurrencies;
    }
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        MultiCollateralCurrency multiCollateralCurrency = (MultiCollateralCurrency) o;
        return Objects.equals(this.loanCurrencies, multiCollateralCurrency.loanCurrencies) &&
                Objects.equals(this.collateralCurrencies, multiCollateralCurrency.collateralCurrencies);
    }

    @Override
    public int hashCode() {
        return Objects.hash(loanCurrencies, collateralCurrencies);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class MultiCollateralCurrency {\n");
        sb.append("      loanCurrencies: ").append(toIndentedString(loanCurrencies)).append("\n");
        sb.append("      collateralCurrencies: ").append(toIndentedString(collateralCurrencies)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n        ");
    }

}

