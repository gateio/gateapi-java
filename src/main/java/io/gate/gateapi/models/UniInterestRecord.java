/*
 * Gate API
 * Welcome to Gate API  APIv4 provides operations related to spot, margin, and contract trading, including public interfaces for querying market data and authenticated private interfaces for implementing API-based automated trading.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.gate.gateapi.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

/**
 * Interest Record
 */
public class UniInterestRecord {
    public static final String SERIALIZED_NAME_STATUS = "status";
    @SerializedName(SERIALIZED_NAME_STATUS)
    private Integer status;

    public static final String SERIALIZED_NAME_CURRENCY = "currency";
    @SerializedName(SERIALIZED_NAME_CURRENCY)
    private String currency;

    public static final String SERIALIZED_NAME_ACTUAL_RATE = "actual_rate";
    @SerializedName(SERIALIZED_NAME_ACTUAL_RATE)
    private String actualRate;

    public static final String SERIALIZED_NAME_INTEREST = "interest";
    @SerializedName(SERIALIZED_NAME_INTEREST)
    private String interest;

    public static final String SERIALIZED_NAME_INTEREST_STATUS = "interest_status";
    @SerializedName(SERIALIZED_NAME_INTEREST_STATUS)
    private String interestStatus;

    public static final String SERIALIZED_NAME_CREATE_TIME = "create_time";
    @SerializedName(SERIALIZED_NAME_CREATE_TIME)
    private Long createTime;


     /**
     * Status: 0 - fail, 1 - success
     * @return status
    **/
    @javax.annotation.Nullable
    public Integer getStatus() {
        return status;
    }


     /**
     * Currency
     * @return currency
    **/
    @javax.annotation.Nullable
    public String getCurrency() {
        return currency;
    }


     /**
     * Actual Rate
     * @return actualRate
    **/
    @javax.annotation.Nullable
    public String getActualRate() {
        return actualRate;
    }


     /**
     * Interest
     * @return interest
    **/
    @javax.annotation.Nullable
    public String getInterest() {
        return interest;
    }


     /**
     * Interest status: interest_dividend - Normal dividend, interest_reinvest - Interest reinvestment Interest reinvestment
     * @return interestStatus
    **/
    @javax.annotation.Nullable
    public String getInterestStatus() {
        return interestStatus;
    }


     /**
     * Created time
     * @return createTime
    **/
    @javax.annotation.Nullable
    public Long getCreateTime() {
        return createTime;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        UniInterestRecord uniInterestRecord = (UniInterestRecord) o;
        return Objects.equals(this.status, uniInterestRecord.status) &&
                Objects.equals(this.currency, uniInterestRecord.currency) &&
                Objects.equals(this.actualRate, uniInterestRecord.actualRate) &&
                Objects.equals(this.interest, uniInterestRecord.interest) &&
                Objects.equals(this.interestStatus, uniInterestRecord.interestStatus) &&
                Objects.equals(this.createTime, uniInterestRecord.createTime);
    }

    @Override
    public int hashCode() {
        return Objects.hash(status, currency, actualRate, interest, interestStatus, createTime);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class UniInterestRecord {\n");
        sb.append("      status: ").append(toIndentedString(status)).append("\n");
        sb.append("      currency: ").append(toIndentedString(currency)).append("\n");
        sb.append("      actualRate: ").append(toIndentedString(actualRate)).append("\n");
        sb.append("      interest: ").append(toIndentedString(interest)).append("\n");
        sb.append("      interestStatus: ").append(toIndentedString(interestStatus)).append("\n");
        sb.append("      createTime: ").append(toIndentedString(createTime)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n        ");
    }

}

