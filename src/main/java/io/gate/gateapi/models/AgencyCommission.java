/*
 * Gate API v4
 * Welcome to Gate.io API  APIv4 provides spot, margin and futures trading operations. There are public APIs to retrieve the real-time market statistics, and private APIs which needs authentication to trade on user's behalf.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.gate.gateapi.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

/**
 * AgencyCommission
 */
public class AgencyCommission {
    public static final String SERIALIZED_NAME_COMMISSION_TIME = "commission_time";
    @SerializedName(SERIALIZED_NAME_COMMISSION_TIME)
    private Long commissionTime;

    public static final String SERIALIZED_NAME_USER_ID = "user_id";
    @SerializedName(SERIALIZED_NAME_USER_ID)
    private Long userId;

    public static final String SERIALIZED_NAME_GROUP_NAME = "group_name";
    @SerializedName(SERIALIZED_NAME_GROUP_NAME)
    private String groupName;

    public static final String SERIALIZED_NAME_COMMISSION_AMOUNT = "commission_amount";
    @SerializedName(SERIALIZED_NAME_COMMISSION_AMOUNT)
    private String commissionAmount;

    public static final String SERIALIZED_NAME_COMMISSION_ASSET = "commission_asset";
    @SerializedName(SERIALIZED_NAME_COMMISSION_ASSET)
    private String commissionAsset;

    public static final String SERIALIZED_NAME_SOURCE = "source";
    @SerializedName(SERIALIZED_NAME_SOURCE)
    private String source;


    public AgencyCommission commissionTime(Long commissionTime) {
        
        this.commissionTime = commissionTime;
        return this;
    }

     /**
     * Commission Time. (unix timestamp)
     * @return commissionTime
    **/
    @javax.annotation.Nullable
    public Long getCommissionTime() {
        return commissionTime;
    }


    public void setCommissionTime(Long commissionTime) {
        this.commissionTime = commissionTime;
    }

    public AgencyCommission userId(Long userId) {
        
        this.userId = userId;
        return this;
    }

     /**
     * User ID
     * @return userId
    **/
    @javax.annotation.Nullable
    public Long getUserId() {
        return userId;
    }


    public void setUserId(Long userId) {
        this.userId = userId;
    }

    public AgencyCommission groupName(String groupName) {
        
        this.groupName = groupName;
        return this;
    }

     /**
     * Group name
     * @return groupName
    **/
    @javax.annotation.Nullable
    public String getGroupName() {
        return groupName;
    }


    public void setGroupName(String groupName) {
        this.groupName = groupName;
    }

    public AgencyCommission commissionAmount(String commissionAmount) {
        
        this.commissionAmount = commissionAmount;
        return this;
    }

     /**
     * Commission Amount
     * @return commissionAmount
    **/
    @javax.annotation.Nullable
    public String getCommissionAmount() {
        return commissionAmount;
    }


    public void setCommissionAmount(String commissionAmount) {
        this.commissionAmount = commissionAmount;
    }

    public AgencyCommission commissionAsset(String commissionAsset) {
        
        this.commissionAsset = commissionAsset;
        return this;
    }

     /**
     * Commission Asset
     * @return commissionAsset
    **/
    @javax.annotation.Nullable
    public String getCommissionAsset() {
        return commissionAsset;
    }


    public void setCommissionAsset(String commissionAsset) {
        this.commissionAsset = commissionAsset;
    }

    public AgencyCommission source(String source) {
        
        this.source = source;
        return this;
    }

     /**
     * Source.  SPOT - SPOT Rebate, FUTURES - Futures Rebate
     * @return source
    **/
    @javax.annotation.Nullable
    public String getSource() {
        return source;
    }


    public void setSource(String source) {
        this.source = source;
    }
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        AgencyCommission agencyCommission = (AgencyCommission) o;
        return Objects.equals(this.commissionTime, agencyCommission.commissionTime) &&
                Objects.equals(this.userId, agencyCommission.userId) &&
                Objects.equals(this.groupName, agencyCommission.groupName) &&
                Objects.equals(this.commissionAmount, agencyCommission.commissionAmount) &&
                Objects.equals(this.commissionAsset, agencyCommission.commissionAsset) &&
                Objects.equals(this.source, agencyCommission.source);
    }

    @Override
    public int hashCode() {
        return Objects.hash(commissionTime, userId, groupName, commissionAmount, commissionAsset, source);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class AgencyCommission {\n");
        sb.append("      commissionTime: ").append(toIndentedString(commissionTime)).append("\n");
        sb.append("      userId: ").append(toIndentedString(userId)).append("\n");
        sb.append("      groupName: ").append(toIndentedString(groupName)).append("\n");
        sb.append("      commissionAmount: ").append(toIndentedString(commissionAmount)).append("\n");
        sb.append("      commissionAsset: ").append(toIndentedString(commissionAsset)).append("\n");
        sb.append("      source: ").append(toIndentedString(source)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n        ");
    }

}

