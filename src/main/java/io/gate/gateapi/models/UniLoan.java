/*
 * Gate API v4
 * Welcome to Gate.io API  APIv4 provides spot, margin and futures trading operations. There are public APIs to retrieve the real-time market statistics, and private APIs which needs authentication to trade on user's behalf.
 *
 * The version of the OpenAPI document: 4.86.0
 * Contact: support@mail.gate.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.gate.gateapi.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

/**
 * Loan
 */
@ApiModel(description = "Loan")

public class UniLoan {
  public static final String SERIALIZED_NAME_CURRENCY = "currency";
  @SerializedName(SERIALIZED_NAME_CURRENCY)
  private String currency;

  public static final String SERIALIZED_NAME_CURRENCY_PAIR = "currency_pair";
  @SerializedName(SERIALIZED_NAME_CURRENCY_PAIR)
  private String currencyPair;

  public static final String SERIALIZED_NAME_AMOUNT = "amount";
  @SerializedName(SERIALIZED_NAME_AMOUNT)
  private String amount;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_CREATE_TIME = "create_time";
  @SerializedName(SERIALIZED_NAME_CREATE_TIME)
  private Long createTime;

  public static final String SERIALIZED_NAME_UPDATE_TIME = "update_time";
  @SerializedName(SERIALIZED_NAME_UPDATE_TIME)
  private Long updateTime;


   /**
   * Currency
   * @return currency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Currency")

  public String getCurrency() {
    return currency;
  }




   /**
   * Currency pair
   * @return currencyPair
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Currency pair")

  public String getCurrencyPair() {
    return currencyPair;
  }




   /**
   * amount
   * @return amount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "amount")

  public String getAmount() {
    return amount;
  }




   /**
   * Loan type, platform - platform, margin - margin
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Loan type, platform - platform, margin - margin")

  public String getType() {
    return type;
  }




   /**
   * Created time
   * @return createTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Created time")

  public Long getCreateTime() {
    return createTime;
  }




   /**
   * Updated time
   * @return updateTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Updated time")

  public Long getUpdateTime() {
    return updateTime;
  }




  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UniLoan uniLoan = (UniLoan) o;
    return Objects.equals(this.currency, uniLoan.currency) &&
        Objects.equals(this.currencyPair, uniLoan.currencyPair) &&
        Objects.equals(this.amount, uniLoan.amount) &&
        Objects.equals(this.type, uniLoan.type) &&
        Objects.equals(this.createTime, uniLoan.createTime) &&
        Objects.equals(this.updateTime, uniLoan.updateTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(currency, currencyPair, amount, type, createTime, updateTime);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UniLoan {\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    currencyPair: ").append(toIndentedString(currencyPair)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

