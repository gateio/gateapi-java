/*
 * Gate API
 * Welcome to Gate API  APIv4 provides operations related to spot, margin, and contract trading, including public interfaces for querying market data and authenticated private interfaces for implementing API-based automated trading.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.gate.gateapi.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

/**
 * DualGetPlans
 */
public class DualGetPlans {
    public static final String SERIALIZED_NAME_ID = "id";
    @SerializedName(SERIALIZED_NAME_ID)
    private Integer id;

    public static final String SERIALIZED_NAME_INSTRUMENT_NAME = "instrument_name";
    @SerializedName(SERIALIZED_NAME_INSTRUMENT_NAME)
    private String instrumentName;

    public static final String SERIALIZED_NAME_INVEST_CURRENCY = "invest_currency";
    @SerializedName(SERIALIZED_NAME_INVEST_CURRENCY)
    private String investCurrency;

    public static final String SERIALIZED_NAME_EXERCISE_CURRENCY = "exercise_currency";
    @SerializedName(SERIALIZED_NAME_EXERCISE_CURRENCY)
    private String exerciseCurrency;

    public static final String SERIALIZED_NAME_EXERCISE_PRICE = "exercise_price";
    @SerializedName(SERIALIZED_NAME_EXERCISE_PRICE)
    private Double exercisePrice;

    public static final String SERIALIZED_NAME_DELIVERY_TIME = "delivery_time";
    @SerializedName(SERIALIZED_NAME_DELIVERY_TIME)
    private Integer deliveryTime;

    public static final String SERIALIZED_NAME_MIN_COPIES = "min_copies";
    @SerializedName(SERIALIZED_NAME_MIN_COPIES)
    private Integer minCopies;

    public static final String SERIALIZED_NAME_MAX_COPIES = "max_copies";
    @SerializedName(SERIALIZED_NAME_MAX_COPIES)
    private Integer maxCopies;

    public static final String SERIALIZED_NAME_PER_VALUE = "per_value";
    @SerializedName(SERIALIZED_NAME_PER_VALUE)
    private String perValue;

    public static final String SERIALIZED_NAME_APY_DISPLAY = "apy_display";
    @SerializedName(SERIALIZED_NAME_APY_DISPLAY)
    private String apyDisplay;

    public static final String SERIALIZED_NAME_START_TIME = "start_time";
    @SerializedName(SERIALIZED_NAME_START_TIME)
    private Integer startTime;

    public static final String SERIALIZED_NAME_END_TIME = "end_time";
    @SerializedName(SERIALIZED_NAME_END_TIME)
    private Integer endTime;

    public static final String SERIALIZED_NAME_STATUS = "status";
    @SerializedName(SERIALIZED_NAME_STATUS)
    private String status;


    public DualGetPlans id(Integer id) {
        
        this.id = id;
        return this;
    }

     /**
     * Plan ID
     * @return id
    **/
    @javax.annotation.Nullable
    public Integer getId() {
        return id;
    }


    public void setId(Integer id) {
        this.id = id;
    }

    public DualGetPlans instrumentName(String instrumentName) {
        
        this.instrumentName = instrumentName;
        return this;
    }

     /**
     * Instrument Name
     * @return instrumentName
    **/
    @javax.annotation.Nullable
    public String getInstrumentName() {
        return instrumentName;
    }


    public void setInstrumentName(String instrumentName) {
        this.instrumentName = instrumentName;
    }

    public DualGetPlans investCurrency(String investCurrency) {
        
        this.investCurrency = investCurrency;
        return this;
    }

     /**
     * Investment Currency
     * @return investCurrency
    **/
    @javax.annotation.Nullable
    public String getInvestCurrency() {
        return investCurrency;
    }


    public void setInvestCurrency(String investCurrency) {
        this.investCurrency = investCurrency;
    }

    public DualGetPlans exerciseCurrency(String exerciseCurrency) {
        
        this.exerciseCurrency = exerciseCurrency;
        return this;
    }

     /**
     * Strike Currency
     * @return exerciseCurrency
    **/
    @javax.annotation.Nullable
    public String getExerciseCurrency() {
        return exerciseCurrency;
    }


    public void setExerciseCurrency(String exerciseCurrency) {
        this.exerciseCurrency = exerciseCurrency;
    }

    public DualGetPlans exercisePrice(Double exercisePrice) {
        
        this.exercisePrice = exercisePrice;
        return this;
    }

     /**
     * Strike price
     * @return exercisePrice
    **/
    @javax.annotation.Nullable
    public Double getExercisePrice() {
        return exercisePrice;
    }


    public void setExercisePrice(Double exercisePrice) {
        this.exercisePrice = exercisePrice;
    }

    public DualGetPlans deliveryTime(Integer deliveryTime) {
        
        this.deliveryTime = deliveryTime;
        return this;
    }

     /**
     * Settlement time
     * @return deliveryTime
    **/
    @javax.annotation.Nullable
    public Integer getDeliveryTime() {
        return deliveryTime;
    }


    public void setDeliveryTime(Integer deliveryTime) {
        this.deliveryTime = deliveryTime;
    }

    public DualGetPlans minCopies(Integer minCopies) {
        
        this.minCopies = minCopies;
        return this;
    }

     /**
     * Minimum Copies
     * @return minCopies
    **/
    @javax.annotation.Nullable
    public Integer getMinCopies() {
        return minCopies;
    }


    public void setMinCopies(Integer minCopies) {
        this.minCopies = minCopies;
    }

    public DualGetPlans maxCopies(Integer maxCopies) {
        
        this.maxCopies = maxCopies;
        return this;
    }

     /**
     * Maximum Copies
     * @return maxCopies
    **/
    @javax.annotation.Nullable
    public Integer getMaxCopies() {
        return maxCopies;
    }


    public void setMaxCopies(Integer maxCopies) {
        this.maxCopies = maxCopies;
    }

    public DualGetPlans perValue(String perValue) {
        
        this.perValue = perValue;
        return this;
    }

     /**
     * Per Unit Value
     * @return perValue
    **/
    @javax.annotation.Nullable
    public String getPerValue() {
        return perValue;
    }


    public void setPerValue(String perValue) {
        this.perValue = perValue;
    }

    public DualGetPlans apyDisplay(String apyDisplay) {
        
        this.apyDisplay = apyDisplay;
        return this;
    }

     /**
     * APY
     * @return apyDisplay
    **/
    @javax.annotation.Nullable
    public String getApyDisplay() {
        return apyDisplay;
    }


    public void setApyDisplay(String apyDisplay) {
        this.apyDisplay = apyDisplay;
    }

    public DualGetPlans startTime(Integer startTime) {
        
        this.startTime = startTime;
        return this;
    }

     /**
     * start time
     * @return startTime
    **/
    @javax.annotation.Nullable
    public Integer getStartTime() {
        return startTime;
    }


    public void setStartTime(Integer startTime) {
        this.startTime = startTime;
    }

    public DualGetPlans endTime(Integer endTime) {
        
        this.endTime = endTime;
        return this;
    }

     /**
     * Finished time
     * @return endTime
    **/
    @javax.annotation.Nullable
    public Integer getEndTime() {
        return endTime;
    }


    public void setEndTime(Integer endTime) {
        this.endTime = endTime;
    }

    public DualGetPlans status(String status) {
        
        this.status = status;
        return this;
    }

     /**
     * Status:   &#x60;NOTSTARTED&#x60;-not started  &#x60;ONGOING&#x60;-ongoing  &#x60;ENDED&#x60;-ended
     * @return status
    **/
    @javax.annotation.Nullable
    public String getStatus() {
        return status;
    }


    public void setStatus(String status) {
        this.status = status;
    }
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        DualGetPlans dualGetPlans = (DualGetPlans) o;
        return Objects.equals(this.id, dualGetPlans.id) &&
                Objects.equals(this.instrumentName, dualGetPlans.instrumentName) &&
                Objects.equals(this.investCurrency, dualGetPlans.investCurrency) &&
                Objects.equals(this.exerciseCurrency, dualGetPlans.exerciseCurrency) &&
                Objects.equals(this.exercisePrice, dualGetPlans.exercisePrice) &&
                Objects.equals(this.deliveryTime, dualGetPlans.deliveryTime) &&
                Objects.equals(this.minCopies, dualGetPlans.minCopies) &&
                Objects.equals(this.maxCopies, dualGetPlans.maxCopies) &&
                Objects.equals(this.perValue, dualGetPlans.perValue) &&
                Objects.equals(this.apyDisplay, dualGetPlans.apyDisplay) &&
                Objects.equals(this.startTime, dualGetPlans.startTime) &&
                Objects.equals(this.endTime, dualGetPlans.endTime) &&
                Objects.equals(this.status, dualGetPlans.status);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, instrumentName, investCurrency, exerciseCurrency, exercisePrice, deliveryTime, minCopies, maxCopies, perValue, apyDisplay, startTime, endTime, status);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class DualGetPlans {\n");
        sb.append("      id: ").append(toIndentedString(id)).append("\n");
        sb.append("      instrumentName: ").append(toIndentedString(instrumentName)).append("\n");
        sb.append("      investCurrency: ").append(toIndentedString(investCurrency)).append("\n");
        sb.append("      exerciseCurrency: ").append(toIndentedString(exerciseCurrency)).append("\n");
        sb.append("      exercisePrice: ").append(toIndentedString(exercisePrice)).append("\n");
        sb.append("      deliveryTime: ").append(toIndentedString(deliveryTime)).append("\n");
        sb.append("      minCopies: ").append(toIndentedString(minCopies)).append("\n");
        sb.append("      maxCopies: ").append(toIndentedString(maxCopies)).append("\n");
        sb.append("      perValue: ").append(toIndentedString(perValue)).append("\n");
        sb.append("      apyDisplay: ").append(toIndentedString(apyDisplay)).append("\n");
        sb.append("      startTime: ").append(toIndentedString(startTime)).append("\n");
        sb.append("      endTime: ").append(toIndentedString(endTime)).append("\n");
        sb.append("      status: ").append(toIndentedString(status)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n        ");
    }

}

