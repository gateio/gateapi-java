/*
 * Gate API
 * Welcome to Gate API  APIv4 provides operations related to spot, margin, and contract trading, including public interfaces for querying market data and authenticated private interfaces for implementing API-based automated trading.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.gate.gateapi.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Convert Small Balance.
 */
public class ConvertSmallBalance {
    public static final String SERIALIZED_NAME_CURRENCY = "currency";
    @SerializedName(SERIALIZED_NAME_CURRENCY)
    private List<String> currency = null;

    public static final String SERIALIZED_NAME_IS_ALL = "is_all";
    @SerializedName(SERIALIZED_NAME_IS_ALL)
    private Boolean isAll;


    public ConvertSmallBalance currency(List<String> currency) {
        
        this.currency = currency;
        return this;
    }

    public ConvertSmallBalance addCurrencyItem(String currencyItem) {
        if (this.currency == null) {
            this.currency = new ArrayList<>();
        }
        this.currency.add(currencyItem);
        return this;
    }

     /**
     * Currency.
     * @return currency
    **/
    @javax.annotation.Nullable
    public List<String> getCurrency() {
        return currency;
    }


    public void setCurrency(List<String> currency) {
        this.currency = currency;
    }

    public ConvertSmallBalance isAll(Boolean isAll) {
        
        this.isAll = isAll;
        return this;
    }

     /**
     * Whether to exchange all.
     * @return isAll
    **/
    @javax.annotation.Nullable
    public Boolean getIsAll() {
        return isAll;
    }


    public void setIsAll(Boolean isAll) {
        this.isAll = isAll;
    }
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ConvertSmallBalance convertSmallBalance = (ConvertSmallBalance) o;
        return Objects.equals(this.currency, convertSmallBalance.currency) &&
                Objects.equals(this.isAll, convertSmallBalance.isAll);
    }

    @Override
    public int hashCode() {
        return Objects.hash(currency, isAll);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ConvertSmallBalance {\n");
        sb.append("      currency: ").append(toIndentedString(currency)).append("\n");
        sb.append("      isAll: ").append(toIndentedString(isAll)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n        ");
    }

}

