/*
 * Gate API v4
 * Welcome to Gate.io API  APIv4 provides spot, margin and futures trading operations. There are public APIs to retrieve the real-time market statistics, and private APIs which needs authentication to trade on user's behalf.
 *
 * The version of the OpenAPI document: 4.86.0
 * Contact: support@mail.gate.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.gate.gateapi.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

/**
 * UnifiedLeverageConfig
 */

public class UnifiedLeverageConfig {
  public static final String SERIALIZED_NAME_CURRENT_LEVERAGE = "current_leverage";
  @SerializedName(SERIALIZED_NAME_CURRENT_LEVERAGE)
  private String currentLeverage;

  public static final String SERIALIZED_NAME_MIN_LEVERAGE = "min_leverage";
  @SerializedName(SERIALIZED_NAME_MIN_LEVERAGE)
  private String minLeverage;

  public static final String SERIALIZED_NAME_MAX_LEVERAGE = "max_leverage";
  @SerializedName(SERIALIZED_NAME_MAX_LEVERAGE)
  private String maxLeverage;

  public static final String SERIALIZED_NAME_DEBIT = "debit";
  @SerializedName(SERIALIZED_NAME_DEBIT)
  private String debit;

  public static final String SERIALIZED_NAME_AVAILABLE_MARGIN = "available_margin";
  @SerializedName(SERIALIZED_NAME_AVAILABLE_MARGIN)
  private String availableMargin;

  public static final String SERIALIZED_NAME_BORROWABLE = "borrowable";
  @SerializedName(SERIALIZED_NAME_BORROWABLE)
  private String borrowable;

  public static final String SERIALIZED_NAME_EXCEPT_LEVERAGE_BORROWABLE = "except_leverage_borrowable";
  @SerializedName(SERIALIZED_NAME_EXCEPT_LEVERAGE_BORROWABLE)
  private String exceptLeverageBorrowable;


  public UnifiedLeverageConfig currentLeverage(String currentLeverage) {
    
    this.currentLeverage = currentLeverage;
    return this;
  }

   /**
   * Current leverage ratio
   * @return currentLeverage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Current leverage ratio")

  public String getCurrentLeverage() {
    return currentLeverage;
  }


  public void setCurrentLeverage(String currentLeverage) {
    this.currentLeverage = currentLeverage;
  }


  public UnifiedLeverageConfig minLeverage(String minLeverage) {
    
    this.minLeverage = minLeverage;
    return this;
  }

   /**
   * Minimum adjustable leverage ratio
   * @return minLeverage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Minimum adjustable leverage ratio")

  public String getMinLeverage() {
    return minLeverage;
  }


  public void setMinLeverage(String minLeverage) {
    this.minLeverage = minLeverage;
  }


  public UnifiedLeverageConfig maxLeverage(String maxLeverage) {
    
    this.maxLeverage = maxLeverage;
    return this;
  }

   /**
   * Maximum adjustable leverage ratio
   * @return maxLeverage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Maximum adjustable leverage ratio")

  public String getMaxLeverage() {
    return maxLeverage;
  }


  public void setMaxLeverage(String maxLeverage) {
    this.maxLeverage = maxLeverage;
  }


  public UnifiedLeverageConfig debit(String debit) {
    
    this.debit = debit;
    return this;
  }

   /**
   * Current liabilities
   * @return debit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Current liabilities")

  public String getDebit() {
    return debit;
  }


  public void setDebit(String debit) {
    this.debit = debit;
  }


  public UnifiedLeverageConfig availableMargin(String availableMargin) {
    
    this.availableMargin = availableMargin;
    return this;
  }

   /**
   * Available Margin
   * @return availableMargin
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Available Margin")

  public String getAvailableMargin() {
    return availableMargin;
  }


  public void setAvailableMargin(String availableMargin) {
    this.availableMargin = availableMargin;
  }


  public UnifiedLeverageConfig borrowable(String borrowable) {
    
    this.borrowable = borrowable;
    return this;
  }

   /**
   * The current leverage you can choose is
   * @return borrowable
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The current leverage you can choose is")

  public String getBorrowable() {
    return borrowable;
  }


  public void setBorrowable(String borrowable) {
    this.borrowable = borrowable;
  }


  public UnifiedLeverageConfig exceptLeverageBorrowable(String exceptLeverageBorrowable) {
    
    this.exceptLeverageBorrowable = exceptLeverageBorrowable;
    return this;
  }

   /**
   * The maximum amount of margin that can be borrowed and the maximum amount of Yubibao that can be borrowed, whichever is smaller
   * @return exceptLeverageBorrowable
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The maximum amount of margin that can be borrowed and the maximum amount of Yubibao that can be borrowed, whichever is smaller")

  public String getExceptLeverageBorrowable() {
    return exceptLeverageBorrowable;
  }


  public void setExceptLeverageBorrowable(String exceptLeverageBorrowable) {
    this.exceptLeverageBorrowable = exceptLeverageBorrowable;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UnifiedLeverageConfig unifiedLeverageConfig = (UnifiedLeverageConfig) o;
    return Objects.equals(this.currentLeverage, unifiedLeverageConfig.currentLeverage) &&
        Objects.equals(this.minLeverage, unifiedLeverageConfig.minLeverage) &&
        Objects.equals(this.maxLeverage, unifiedLeverageConfig.maxLeverage) &&
        Objects.equals(this.debit, unifiedLeverageConfig.debit) &&
        Objects.equals(this.availableMargin, unifiedLeverageConfig.availableMargin) &&
        Objects.equals(this.borrowable, unifiedLeverageConfig.borrowable) &&
        Objects.equals(this.exceptLeverageBorrowable, unifiedLeverageConfig.exceptLeverageBorrowable);
  }

  @Override
  public int hashCode() {
    return Objects.hash(currentLeverage, minLeverage, maxLeverage, debit, availableMargin, borrowable, exceptLeverageBorrowable);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UnifiedLeverageConfig {\n");
    sb.append("    currentLeverage: ").append(toIndentedString(currentLeverage)).append("\n");
    sb.append("    minLeverage: ").append(toIndentedString(minLeverage)).append("\n");
    sb.append("    maxLeverage: ").append(toIndentedString(maxLeverage)).append("\n");
    sb.append("    debit: ").append(toIndentedString(debit)).append("\n");
    sb.append("    availableMargin: ").append(toIndentedString(availableMargin)).append("\n");
    sb.append("    borrowable: ").append(toIndentedString(borrowable)).append("\n");
    sb.append("    exceptLeverageBorrowable: ").append(toIndentedString(exceptLeverageBorrowable)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

