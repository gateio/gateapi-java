/*
 * Gate API
 * Welcome to Gate API  APIv4 provides operations related to spot, margin, and contract trading, including public interfaces for querying market data and authenticated private interfaces for implementing API-based automated trading.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.gate.gateapi.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

/**
 * Total borrowed amount and pledged collateral amount by the user
 */
public class UserTotalAmount {
    public static final String SERIALIZED_NAME_BORROW_AMOUNT = "borrow_amount";
    @SerializedName(SERIALIZED_NAME_BORROW_AMOUNT)
    private String borrowAmount;

    public static final String SERIALIZED_NAME_COLLATERAL_AMOUNT = "collateral_amount";
    @SerializedName(SERIALIZED_NAME_COLLATERAL_AMOUNT)
    private String collateralAmount;


    public UserTotalAmount borrowAmount(String borrowAmount) {
        
        this.borrowAmount = borrowAmount;
        return this;
    }

     /**
     * Total borrowing amount, calculated in USDT
     * @return borrowAmount
    **/
    @javax.annotation.Nullable
    public String getBorrowAmount() {
        return borrowAmount;
    }


    public void setBorrowAmount(String borrowAmount) {
        this.borrowAmount = borrowAmount;
    }

    public UserTotalAmount collateralAmount(String collateralAmount) {
        
        this.collateralAmount = collateralAmount;
        return this;
    }

     /**
     * Total collateral amount, calculated in USDT
     * @return collateralAmount
    **/
    @javax.annotation.Nullable
    public String getCollateralAmount() {
        return collateralAmount;
    }


    public void setCollateralAmount(String collateralAmount) {
        this.collateralAmount = collateralAmount;
    }
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        UserTotalAmount userTotalAmount = (UserTotalAmount) o;
        return Objects.equals(this.borrowAmount, userTotalAmount.borrowAmount) &&
                Objects.equals(this.collateralAmount, userTotalAmount.collateralAmount);
    }

    @Override
    public int hashCode() {
        return Objects.hash(borrowAmount, collateralAmount);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class UserTotalAmount {\n");
        sb.append("      borrowAmount: ").append(toIndentedString(borrowAmount)).append("\n");
        sb.append("      collateralAmount: ").append(toIndentedString(collateralAmount)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n        ");
    }

}

