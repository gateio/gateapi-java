/*
 * Gate API v4
 * Welcome to Gate.io API  APIv4 provides spot, margin and futures trading operations. There are public APIs to retrieve the real-time market statistics, and private APIs which needs authentication to trade on user's behalf.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.gate.gateapi.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

/**
 * Structured Request Parameters
 */
public class StructuredOrderListRequest {
    public static final String SERIALIZED_NAME_FROM = "from";
    @SerializedName(SERIALIZED_NAME_FROM)
    private Integer from;

    public static final String SERIALIZED_NAME_TO = "to";
    @SerializedName(SERIALIZED_NAME_TO)
    private Integer to;

    public static final String SERIALIZED_NAME_PAGE = "page";
    @SerializedName(SERIALIZED_NAME_PAGE)
    private Integer page;

    public static final String SERIALIZED_NAME_LIMIT = "limit";
    @SerializedName(SERIALIZED_NAME_LIMIT)
    private Integer limit;


    public StructuredOrderListRequest from(Integer from) {
        
        this.from = from;
        return this;
    }

     /**
     * start time
     * @return from
    **/
    public Integer getFrom() {
        return from;
    }


    public void setFrom(Integer from) {
        this.from = from;
    }

    public StructuredOrderListRequest to(Integer to) {
        
        this.to = to;
        return this;
    }

     /**
     * Finished time
     * @return to
    **/
    public Integer getTo() {
        return to;
    }


    public void setTo(Integer to) {
        this.to = to;
    }

    public StructuredOrderListRequest page(Integer page) {
        
        this.page = page;
        return this;
    }

     /**
     * Page number
     * @return page
    **/
    @javax.annotation.Nullable
    public Integer getPage() {
        return page;
    }


    public void setPage(Integer page) {
        this.page = page;
    }

    public StructuredOrderListRequest limit(Integer limit) {
        
        this.limit = limit;
        return this;
    }

     /**
     * Number of items returned in the list. Default is 100.
     * @return limit
    **/
    @javax.annotation.Nullable
    public Integer getLimit() {
        return limit;
    }


    public void setLimit(Integer limit) {
        this.limit = limit;
    }
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        StructuredOrderListRequest structuredOrderListRequest = (StructuredOrderListRequest) o;
        return Objects.equals(this.from, structuredOrderListRequest.from) &&
                Objects.equals(this.to, structuredOrderListRequest.to) &&
                Objects.equals(this.page, structuredOrderListRequest.page) &&
                Objects.equals(this.limit, structuredOrderListRequest.limit);
    }

    @Override
    public int hashCode() {
        return Objects.hash(from, to, page, limit);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class StructuredOrderListRequest {\n");
        sb.append("      from: ").append(toIndentedString(from)).append("\n");
        sb.append("      to: ").append(toIndentedString(to)).append("\n");
        sb.append("      page: ").append(toIndentedString(page)).append("\n");
        sb.append("      limit: ").append(toIndentedString(limit)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n        ");
    }

}

